

================================================================
== Vivado HLS Report for 'fc_layer'
================================================================
* Date:           Sun Mar 31 16:55:32 2019

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        fc_proj
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a200tsbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.00|      3.50|        0.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |                 |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1         |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 1.1      |    ?|    ?|         ?|          -|          -|     ?|    no    |
        |  ++ Loop 1.1.1  |    ?|    ?|  18 ~ 53 |          -|          -|     ?|    no    |
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+--------+
|       Name      | BRAM_18K| DSP48E|   FF   |   LUT  |
+-----------------+---------+-------+--------+--------+
|DSP              |        -|      -|       -|       -|
|Expression       |        -|      -|    1607|     750|
|FIFO             |        -|      -|       -|       -|
|Instance         |        2|      9|    1719|    1470|
|Memory           |        -|      -|       -|       -|
|Multiplexer      |        -|      -|       -|     682|
|Register         |        -|      -|    1400|       -|
+-----------------+---------+-------+--------+--------+
|Total            |        2|      9|    4726|    2902|
+-----------------+---------+-------+--------+--------+
|Available        |      730|    740|  269200|  129000|
+-----------------+---------+-------+--------+--------+
|Utilization (%)  |    ~0   |      1|       1|       2|
+-----------------+---------+-------+--------+--------+

+ Detail: 
    * Instance: 
    +---------------------------+-------------------------+---------+-------+-----+-----+
    |          Instance         |          Module         | BRAM_18K| DSP48E|  FF | LUT |
    +---------------------------+-------------------------+---------+-------+-----+-----+
    |fc_layer_CTRL_BUS_s_axi_U  |fc_layer_CTRL_BUS_s_axi  |        0|      0|  264|  424|
    |fc_layer_fadd_32nbkb_U0    |fc_layer_fadd_32nbkb     |        0|      2|  422|  243|
    |fc_layer_fcmp_32ndEe_U2    |fc_layer_fcmp_32ndEe     |        0|      0|   75|   66|
    |fc_layer_fmul_32ncud_U1    |fc_layer_fmul_32ncud     |        0|      3|  199|  138|
    |fc_layer_mem_m_axi_U       |fc_layer_mem_m_axi       |        2|      0|  512|  580|
    |fc_layer_mul_32s_eOg_U3    |fc_layer_mul_32s_eOg     |        0|      4|  247|   19|
    +---------------------------+-------------------------+---------+-------+-----+-----+
    |Total                      |                         |        2|      9| 1719| 1470|
    +---------------------------+-------------------------+---------+-------+-----+-----+

    * DSP48: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +---------------------+----------+-------+-----+----+------------+------------+
    |    Variable Name    | Operation| DSP48E|  FF | LUT| Bitwidth P0| Bitwidth P1|
    +---------------------+----------+-------+-----+----+------------+------------+
    |b_1_fu_312_p2        |     +    |      0|   98|  36|          31|           1|
    |grp_fu_236_p2        |     +    |      0|  101|  37|          32|          32|
    |i_1_fu_367_p2        |     +    |      0|   98|  36|          31|           1|
    |next_mul2_fu_298_p2  |     +    |      0|  101|  37|          32|          32|
    |next_mul4_fu_293_p2  |     +    |      0|  101|  37|          32|          32|
    |next_mul_fu_323_p2   |     +    |      0|  101|  37|          32|          32|
    |o_1_fu_337_p2        |     +    |      0|   98|  36|          31|           1|
    |tmp1_fu_343_p2       |     +    |      0|  101|  37|          32|          32|
    |tmp2_fu_288_p2       |     +    |      0|  101|  37|          32|          32|
    |tmp3_fu_379_p2       |     +    |      0|  101|  37|          32|          32|
    |tmp4_fu_373_p2       |     +    |      0|  101|  37|          32|          32|
    |tmp5_fu_431_p2       |     +    |      0|  101|  37|          32|          32|
    |tmp_10_fu_383_p2     |     +    |      0|  101|  37|          32|          32|
    |tmp_16_fu_435_p2     |     +    |      0|  101|  37|          32|          32|
    |tmp_6_fu_318_p2      |     +    |      0|  101|  37|          32|          32|
    |tmp_9_fu_348_p2      |     +    |      0|  101|  37|          32|          32|
    |ap_block_state82     |    and   |      0|    0|   2|           1|           1|
    |tmp_15_fu_426_p2     |    and   |      0|    0|   2|           1|           1|
    |tmp_25_fu_479_p2     |    and   |      0|    0|   2|           1|           1|
    |tmp_30_fu_518_p2     |    and   |      0|    0|   2|           1|           1|
    |notlhs1_fu_463_p2    |   icmp   |      0|    0|   4|           8|           2|
    |notlhs8_fu_410_p2    |   icmp   |      0|    0|   4|           8|           2|
    |notlhs_fu_502_p2     |   icmp   |      0|    0|   4|           8|           2|
    |notrhs1_fu_469_p2    |   icmp   |      0|    0|  13|          23|           1|
    |notrhs9_fu_416_p2    |   icmp   |      0|    0|  13|          23|           1|
    |notrhs_fu_508_p2     |   icmp   |      0|    0|  13|          23|           1|
    |tmp_1_fu_277_p2      |   icmp   |      0|    0|  16|          32|           1|
    |tmp_3_fu_307_p2      |   icmp   |      0|    0|  16|          32|          32|
    |tmp_5_fu_362_p2      |   icmp   |      0|    0|  16|          32|          32|
    |tmp_7_fu_332_p2      |   icmp   |      0|    0|  16|          32|          32|
    |tmp_13_fu_422_p2     |    or    |      0|    0|   2|           1|           1|
    |tmp_19_fu_475_p2     |    or    |      0|    0|   2|           1|           1|
    |tmp_28_fu_514_p2     |    or    |      0|    0|   2|           1|           1|
    |tmp_22_fu_523_p3     |  select  |      0|    0|  32|           1|          32|
    +---------------------+----------+-------+-----+----+------------+------------+
    |Total                |          |      0| 1607| 750|         738|         564|
    +---------------------+----------+-------+-----+----+------------+------------+

    * Multiplexer: 
    +----------------------------+-----+-----------+-----+-----------+
    |            Name            | LUT | Input Size| Bits| Total Bits|
    +----------------------------+-----+-----------+-----+-----------+
    |ap_NS_fsm                   |  457|         90|    1|         90|
    |ap_sig_ioackin_mem_ARREADY  |    9|          2|    1|          2|
    |ap_sig_ioackin_mem_AWREADY  |    9|          2|    1|          2|
    |ap_sig_ioackin_mem_WREADY   |    9|          2|    1|          2|
    |b_reg_127                   |    9|          2|   31|         62|
    |grp_fu_230_opcode           |   15|          3|    5|         15|
    |grp_fu_230_p0               |   21|          4|   32|        128|
    |i_reg_195                   |    9|          2|   31|         62|
    |mem_ARADDR                  |   21|          4|   32|        128|
    |mem_WDATA                   |   15|          3|   32|         96|
    |mem_blk_n_AR                |    9|          2|    1|          2|
    |mem_blk_n_AW                |    9|          2|    1|          2|
    |mem_blk_n_B                 |    9|          2|    1|          2|
    |mem_blk_n_R                 |    9|          2|    1|          2|
    |mem_blk_n_W                 |    9|          2|    1|          2|
    |o_reg_161                   |    9|          2|   31|         62|
    |phi_mul1_reg_138            |    9|          2|   32|         64|
    |phi_mul3_reg_150            |    9|          2|   32|         64|
    |phi_mul_reg_172             |    9|          2|   32|         64|
    |tmp_8_be_phi_fu_210_p6      |    9|          2|   32|         64|
    |tmp_8_be_reg_206            |    9|          2|   32|         64|
    |tmp_8_reg_184               |    9|          2|   32|         64|
    +----------------------------+-----+-----------+-----+-----------+
    |Total                       |  682|        138|  395|       1043|
    +----------------------------+-----+-----------+-----+-----------+

    * Register: 
    +----------------------------+----+----+-----+-----------+
    |            Name            | FF | LUT| Bits| Const Bits|
    +----------------------------+----+----+-----+-----------+
    |ap_CS_fsm                   |  89|   0|   89|          0|
    |ap_reg_ioackin_mem_ARREADY  |   1|   0|    1|          0|
    |ap_reg_ioackin_mem_AWREADY  |   1|   0|    1|          0|
    |ap_reg_ioackin_mem_WREADY   |   1|   0|    1|          0|
    |b_1_reg_606                 |  31|   0|   31|          0|
    |b_reg_127                   |  31|   0|   31|          0|
    |batch_size_read_reg_552     |  32|   0|   32|          0|
    |enable_relu_read_reg_531    |  32|   0|   32|          0|
    |i_1_reg_663                 |  31|   0|   31|          0|
    |i_cast_reg_655              |  31|   0|   32|          1|
    |i_reg_195                   |  31|   0|   31|          0|
    |input_element_reg_689       |  32|   0|   32|          0|
    |next_mul2_reg_598           |  32|   0|   32|          0|
    |next_mul4_reg_593           |  32|   0|   32|          0|
    |next_mul_reg_616            |  32|   0|   32|          0|
    |notlhs1_reg_738             |   1|   0|    1|          0|
    |notlhs8_reg_696             |   1|   0|    1|          0|
    |notlhs_reg_767              |   1|   0|    1|          0|
    |notrhs1_reg_743             |   1|   0|    1|          0|
    |notrhs9_reg_701             |   1|   0|    1|          0|
    |notrhs_reg_772              |   1|   0|    1|          0|
    |num_inputs_read_reg_544     |  32|   0|   32|          0|
    |num_outputs_read_reg_536    |  32|   0|   32|          0|
    |num_weights_reg_571         |  32|   0|   32|          0|
    |o_1_reg_629                 |  31|   0|   31|          0|
    |o_cast_reg_621              |  31|   0|   32|          1|
    |o_reg_161                   |  31|   0|   31|          0|
    |output_element_1_reg_762    |  32|   0|   32|          0|
    |output_element_reg_650      |  32|   0|   32|          0|
    |phi_mul1_reg_138            |  32|   0|   32|          0|
    |phi_mul3_reg_150            |  32|   0|   32|          0|
    |phi_mul_reg_172             |  32|   0|   32|          0|
    |reg_240                     |  32|   0|   32|          0|
    |tmp1_reg_634                |  32|   0|   32|          0|
    |tmp2_reg_588                |  32|   0|   32|          0|
    |tmp3_reg_673                |  32|   0|   32|          0|
    |tmp4_reg_668                |  32|   0|   32|          0|
    |tmp5_reg_715                |  32|   0|   32|          0|
    |tmp_10_reg_678              |  32|   0|   32|          0|
    |tmp_14_reg_706              |   1|   0|    1|          0|
    |tmp_15_reg_711              |   1|   0|    1|          0|
    |tmp_16_reg_720              |  32|   0|   32|          0|
    |tmp_1_reg_567               |   1|   0|    1|          0|
    |tmp_21_reg_748              |   1|   0|    1|          0|
    |tmp_22_reg_782              |  32|   0|   32|          0|
    |tmp_24_reg_757              |  32|   0|   32|          0|
    |tmp_25_reg_753              |   1|   0|    1|          0|
    |tmp_29_reg_777              |   1|   0|    1|          0|
    |tmp_2_reg_562               |  30|   0|   30|          0|
    |tmp_4_reg_583               |  30|   0|   32|          2|
    |tmp_6_reg_611               |  32|   0|   32|          0|
    |tmp_8_be_reg_206            |  32|   0|   32|          0|
    |tmp_8_reg_184               |  32|   0|   32|          0|
    |tmp_9_reg_639               |  32|   0|   32|          0|
    |tmp_reg_557                 |  30|   0|   30|          0|
    |tmp_s_reg_577               |  30|   0|   32|          2|
    |weight_element_reg_731      |  32|   0|   32|          0|
    +----------------------------+----+----+-----+-----------+
    |Total                       |1400|   0| 1406|          6|
    +----------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+------------------------+-----+-----+------------+--------------+--------------+
|        RTL Ports       | Dir | Bits|  Protocol  | Source Object|    C Type    |
+------------------------+-----+-----+------------+--------------+--------------+
|s_axi_CTRL_BUS_AWVALID  |  in |    1|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_AWREADY  | out |    1|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_AWADDR   |  in |    6|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_WVALID   |  in |    1|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_WREADY   | out |    1|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_WDATA    |  in |   32|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_WSTRB    |  in |    4|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_ARVALID  |  in |    1|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_ARREADY  | out |    1|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_ARADDR   |  in |    6|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_RVALID   | out |    1|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_RREADY   |  in |    1|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_RDATA    | out |   32|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_RRESP    | out |    2|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_BVALID   | out |    1|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_BREADY   |  in |    1|    s_axi   |   CTRL_BUS   |    scalar    |
|s_axi_CTRL_BUS_BRESP    | out |    2|    s_axi   |   CTRL_BUS   |    scalar    |
|ap_clk                  |  in |    1| ap_ctrl_hs |   fc_layer   | return value |
|ap_rst_n                |  in |    1| ap_ctrl_hs |   fc_layer   | return value |
|interrupt               | out |    1| ap_ctrl_hs |   fc_layer   | return value |
|m_axi_mem_AWVALID       | out |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_AWREADY       |  in |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_AWADDR        | out |   32|    m_axi   |      mem     |    pointer   |
|m_axi_mem_AWID          | out |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_AWLEN         | out |    8|    m_axi   |      mem     |    pointer   |
|m_axi_mem_AWSIZE        | out |    3|    m_axi   |      mem     |    pointer   |
|m_axi_mem_AWBURST       | out |    2|    m_axi   |      mem     |    pointer   |
|m_axi_mem_AWLOCK        | out |    2|    m_axi   |      mem     |    pointer   |
|m_axi_mem_AWCACHE       | out |    4|    m_axi   |      mem     |    pointer   |
|m_axi_mem_AWPROT        | out |    3|    m_axi   |      mem     |    pointer   |
|m_axi_mem_AWQOS         | out |    4|    m_axi   |      mem     |    pointer   |
|m_axi_mem_AWREGION      | out |    4|    m_axi   |      mem     |    pointer   |
|m_axi_mem_AWUSER        | out |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_WVALID        | out |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_WREADY        |  in |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_WDATA         | out |   32|    m_axi   |      mem     |    pointer   |
|m_axi_mem_WSTRB         | out |    4|    m_axi   |      mem     |    pointer   |
|m_axi_mem_WLAST         | out |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_WID           | out |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_WUSER         | out |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_ARVALID       | out |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_ARREADY       |  in |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_ARADDR        | out |   32|    m_axi   |      mem     |    pointer   |
|m_axi_mem_ARID          | out |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_ARLEN         | out |    8|    m_axi   |      mem     |    pointer   |
|m_axi_mem_ARSIZE        | out |    3|    m_axi   |      mem     |    pointer   |
|m_axi_mem_ARBURST       | out |    2|    m_axi   |      mem     |    pointer   |
|m_axi_mem_ARLOCK        | out |    2|    m_axi   |      mem     |    pointer   |
|m_axi_mem_ARCACHE       | out |    4|    m_axi   |      mem     |    pointer   |
|m_axi_mem_ARPROT        | out |    3|    m_axi   |      mem     |    pointer   |
|m_axi_mem_ARQOS         | out |    4|    m_axi   |      mem     |    pointer   |
|m_axi_mem_ARREGION      | out |    4|    m_axi   |      mem     |    pointer   |
|m_axi_mem_ARUSER        | out |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_RVALID        |  in |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_RREADY        | out |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_RDATA         |  in |   32|    m_axi   |      mem     |    pointer   |
|m_axi_mem_RLAST         |  in |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_RID           |  in |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_RUSER         |  in |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_RRESP         |  in |    2|    m_axi   |      mem     |    pointer   |
|m_axi_mem_BVALID        |  in |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_BREADY        | out |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_BRESP         |  in |    2|    m_axi   |      mem     |    pointer   |
|m_axi_mem_BID           |  in |    1|    m_axi   |      mem     |    pointer   |
|m_axi_mem_BUSER         |  in |    1|    m_axi   |      mem     |    pointer   |
+------------------------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 89
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / (tmp_3)
9 --> 
	10  / (tmp_7)
	8  / (!tmp_7)
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / (tmp_5)
	73  / (!tmp_5 & !tmp_1)
	83  / (!tmp_5 & tmp_1)
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / (!tmp_15)
	72  / (tmp_15)
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / (!tmp_25)
	72  / (tmp_25)
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	20  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	9  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	82  / true
* FSM state operations: 

 <State 1>: 3.14ns
ST_1: enable_relu_read (16)  [1/1] 1.00ns
:8  %enable_relu_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %enable_relu) nounwind

ST_1: num_outputs_read (17)  [1/1] 1.00ns
:9  %num_outputs_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %num_outputs) nounwind

ST_1: num_inputs_read (18)  [1/1] 1.00ns
:10  %num_inputs_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %num_inputs) nounwind

ST_1: batch_size_read (19)  [1/1] 1.00ns
:11  %batch_size_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %batch_size) nounwind

ST_1: output_offset_read (20)  [1/1] 1.00ns
:12  %output_offset_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %output_offset) nounwind

ST_1: input_offset_read (21)  [1/1] 1.00ns
:13  %input_offset_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %input_offset) nounwind

ST_1: num_weights (30)  [7/7] 2.14ns  loc: ../fc_test/fc_layer.cpp:21
:22  %num_weights = mul nsw i32 %num_outputs_read, %num_inputs_read

ST_1: tmp (31)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:31
:23  %tmp = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %input_offset_read, i32 2, i32 31)

ST_1: tmp_2 (34)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:54
:26  %tmp_2 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %output_offset_read, i32 2, i32 31)


 <State 2>: 3.25ns
ST_2: num_weights (30)  [6/7] 2.14ns  loc: ../fc_test/fc_layer.cpp:21
:22  %num_weights = mul nsw i32 %num_outputs_read, %num_inputs_read

ST_2: tmp_1 (33)  [1/1] 3.25ns  loc: ../fc_test/fc_layer.cpp:51
:25  %tmp_1 = icmp eq i32 %enable_relu_read, 0


 <State 3>: 2.14ns
ST_3: num_weights (30)  [5/7] 2.14ns  loc: ../fc_test/fc_layer.cpp:21
:22  %num_weights = mul nsw i32 %num_outputs_read, %num_inputs_read


 <State 4>: 2.14ns
ST_4: num_weights (30)  [4/7] 2.14ns  loc: ../fc_test/fc_layer.cpp:21
:22  %num_weights = mul nsw i32 %num_outputs_read, %num_inputs_read


 <State 5>: 2.14ns
ST_5: num_weights (30)  [3/7] 2.14ns  loc: ../fc_test/fc_layer.cpp:21
:22  %num_weights = mul nsw i32 %num_outputs_read, %num_inputs_read


 <State 6>: 2.14ns
ST_6: num_weights (30)  [2/7] 2.14ns  loc: ../fc_test/fc_layer.cpp:21
:22  %num_weights = mul nsw i32 %num_outputs_read, %num_inputs_read


 <State 7>: 2.89ns
ST_7: StgValue_105 (8)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(float* %mem) nounwind, !map !13

ST_7: StgValue_106 (9)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32 %input_offset) nounwind, !map !19

ST_7: StgValue_107 (10)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i32 %output_offset) nounwind, !map !25

ST_7: StgValue_108 (11)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32 %batch_size) nounwind, !map !29

ST_7: StgValue_109 (12)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 %num_inputs) nounwind, !map !33

ST_7: StgValue_110 (13)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i32 %num_outputs) nounwind, !map !37

ST_7: StgValue_111 (14)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i32 %enable_relu) nounwind, !map !41

ST_7: StgValue_112 (15)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @fc_layer_str) nounwind

ST_7: StgValue_113 (22)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:12
:14  call void (...)* @_ssdm_op_SpecInterface(float* %mem, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i64 2147483648, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_7: StgValue_114 (23)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:13
:15  call void (...)* @_ssdm_op_SpecInterface(i32 %input_offset, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_7: StgValue_115 (24)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:14
:16  call void (...)* @_ssdm_op_SpecInterface(i32 %output_offset, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_7: StgValue_116 (25)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:15
:17  call void (...)* @_ssdm_op_SpecInterface(i32 %batch_size, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_7: StgValue_117 (26)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:16
:18  call void (...)* @_ssdm_op_SpecInterface(i32 %num_inputs, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_7: StgValue_118 (27)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:17
:19  call void (...)* @_ssdm_op_SpecInterface(i32 %num_outputs, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_7: StgValue_119 (28)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:18
:20  call void (...)* @_ssdm_op_SpecInterface(i32 %enable_relu, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_7: StgValue_120 (29)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:19
:21  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_7: num_weights (30)  [1/7] 2.14ns  loc: ../fc_test/fc_layer.cpp:21
:22  %num_weights = mul nsw i32 %num_outputs_read, %num_inputs_read

ST_7: tmp_s (32)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:31
:24  %tmp_s = zext i30 %tmp to i32

ST_7: tmp_4 (35)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:54
:27  %tmp_4 = zext i30 %tmp_2 to i32

ST_7: tmp2 (36)  [1/1] 2.89ns  loc: ../fc_test/fc_layer.cpp:36
:28  %tmp2 = add i32 %tmp_s, %num_outputs_read

ST_7: StgValue_125 (37)  [1/1] 1.61ns  loc: ../fc_test/fc_layer.cpp:25
:29  br label %.loopexit


 <State 8>: 3.25ns
ST_8: b (39)  [1/1] 0.00ns
.loopexit:0  %b = phi i31 [ 0, %0 ], [ %b_1, %.loopexit.loopexit ]

ST_8: phi_mul1 (40)  [1/1] 0.00ns
.loopexit:1  %phi_mul1 = phi i32 [ 0, %0 ], [ %next_mul2, %.loopexit.loopexit ]

ST_8: phi_mul3 (41)  [1/1] 0.00ns
.loopexit:2  %phi_mul3 = phi i32 [ 0, %0 ], [ %next_mul4, %.loopexit.loopexit ]

ST_8: next_mul4 (42)  [1/1] 2.89ns
.loopexit:3  %next_mul4 = add i32 %phi_mul3, %num_outputs_read

ST_8: next_mul2 (43)  [1/1] 2.89ns
.loopexit:4  %next_mul2 = add i32 %phi_mul1, %num_inputs_read

ST_8: b_cast (44)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:25
.loopexit:5  %b_cast = zext i31 %b to i32

ST_8: tmp_3 (45)  [1/1] 3.25ns  loc: ../fc_test/fc_layer.cpp:25
.loopexit:6  %tmp_3 = icmp slt i32 %b_cast, %batch_size_read

ST_8: b_1 (46)  [1/1] 2.85ns  loc: ../fc_test/fc_layer.cpp:25
.loopexit:7  %b_1 = add i31 %b, 1

ST_8: StgValue_134 (47)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:25
.loopexit:8  br i1 %tmp_3, label %.preheader.preheader, label %9

ST_8: tmp_6 (49)  [1/1] 2.89ns  loc: ../fc_test/fc_layer.cpp:54
.preheader.preheader:0  %tmp_6 = add i32 %phi_mul3, %tmp_4

ST_8: StgValue_136 (50)  [1/1] 1.61ns  loc: ../fc_test/fc_layer.cpp:28
.preheader.preheader:1  br label %.preheader

ST_8: StgValue_137 (141)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:57
:0  ret void


 <State 9>: 3.25ns
ST_9: o (52)  [1/1] 0.00ns
.preheader:0  %o = phi i31 [ %o_1, %8 ], [ 0, %.preheader.preheader ]

ST_9: phi_mul (53)  [1/1] 0.00ns
.preheader:1  %phi_mul = phi i32 [ %next_mul, %8 ], [ 0, %.preheader.preheader ]

ST_9: next_mul (54)  [1/1] 2.89ns
.preheader:2  %next_mul = add i32 %phi_mul, %num_inputs_read

ST_9: o_cast (55)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:28
.preheader:3  %o_cast = zext i31 %o to i32

ST_9: tmp_7 (56)  [1/1] 3.25ns  loc: ../fc_test/fc_layer.cpp:28
.preheader:4  %tmp_7 = icmp slt i32 %o_cast, %num_outputs_read

ST_9: o_1 (57)  [1/1] 2.85ns  loc: ../fc_test/fc_layer.cpp:28
.preheader:5  %o_1 = add i31 %o, 1

ST_9: StgValue_144 (58)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:28
.preheader:6  br i1 %tmp_7, label %1, label %.loopexit.loopexit

ST_9: tmp1 (60)  [1/1] 2.85ns  loc: ../fc_test/fc_layer.cpp:31
:0  %tmp1 = add i32 %tmp_s, %o_cast

ST_9: StgValue_146 (139)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 10>: 2.89ns
ST_10: tmp_9 (61)  [1/1] 2.89ns  loc: ../fc_test/fc_layer.cpp:31
:1  %tmp_9 = add i32 %tmp1, %num_weights


 <State 11>: 3.50ns
ST_11: mem_addr (62)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:31
:2  %mem_addr = getelementptr inbounds float* %mem, i32 %tmp_9

ST_11: output_element_req (63)  [7/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:31
:3  %output_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr, i32 1) nounwind


 <State 12>: 3.50ns
ST_12: output_element_req (63)  [6/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:31
:3  %output_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr, i32 1) nounwind


 <State 13>: 3.50ns
ST_13: output_element_req (63)  [5/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:31
:3  %output_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr, i32 1) nounwind


 <State 14>: 3.50ns
ST_14: output_element_req (63)  [4/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:31
:3  %output_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr, i32 1) nounwind


 <State 15>: 3.50ns
ST_15: output_element_req (63)  [3/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:31
:3  %output_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr, i32 1) nounwind


 <State 16>: 3.50ns
ST_16: output_element_req (63)  [2/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:31
:3  %output_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr, i32 1) nounwind


 <State 17>: 3.50ns
ST_17: output_element_req (63)  [1/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:31
:3  %output_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr, i32 1) nounwind


 <State 18>: 3.50ns
ST_18: output_element (64)  [1/1] 3.50ns  loc: ../fc_test/fc_layer.cpp:31
:4  %output_element = call float @_ssdm_op_Read.m_axi.floatP(float* %mem_addr) nounwind


 <State 19>: 1.61ns
ST_19: StgValue_157 (65)  [1/1] 1.61ns  loc: ../fc_test/fc_layer.cpp:34
:5  br label %._crit_edge


 <State 20>: 3.25ns
ST_20: tmp_8 (67)  [1/1] 0.00ns
._crit_edge:0  %tmp_8 = phi float [ %output_element, %1 ], [ %tmp_8_be, %._crit_edge.backedge ]

ST_20: i (68)  [1/1] 0.00ns
._crit_edge:1  %i = phi i31 [ 0, %1 ], [ %i_1, %._crit_edge.backedge ]

ST_20: i_cast (69)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:34
._crit_edge:2  %i_cast = zext i31 %i to i32

ST_20: tmp_5 (70)  [1/1] 3.25ns  loc: ../fc_test/fc_layer.cpp:34
._crit_edge:3  %tmp_5 = icmp slt i32 %i_cast, %num_inputs_read

ST_20: i_1 (71)  [1/1] 2.85ns  loc: ../fc_test/fc_layer.cpp:34
._crit_edge:4  %i_1 = add i31 %i, 1

ST_20: StgValue_163 (72)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:34
._crit_edge:5  br i1 %tmp_5, label %2, label %5

ST_20: tmp4 (74)  [1/1] 2.89ns  loc: ../fc_test/fc_layer.cpp:36
:0  %tmp4 = add i32 %phi_mul1, %i_cast

ST_20: StgValue_165 (112)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:51
:0  br i1 %tmp_1, label %7, label %6

ST_20: tmp_29 (120)  [4/4] 2.64ns  loc: C:/Xilinx/Vivado_HLS/2017.2/win64/tools/clang/bin\..\lib\clang\3.1/../../../include/c++/4.5.2\bits/stl_algobase.h:214->../fc_test/fc_layer.cpp:52
:6  %tmp_29 = fcmp ogt float %tmp_8, 0.000000e+00

ST_20: tmp_23 (123)  [1/1] 2.89ns  loc: ../fc_test/fc_layer.cpp:52
:9  %tmp_23 = add i32 %o_cast, %tmp_6

ST_20: tmp_20 (130)  [1/1] 2.89ns  loc: ../fc_test/fc_layer.cpp:54
:0  %tmp_20 = add i32 %o_cast, %tmp_6


 <State 21>: 2.89ns
ST_21: tmp3 (75)  [1/1] 2.89ns  loc: ../fc_test/fc_layer.cpp:36
:1  %tmp3 = add i32 %tmp4, %num_weights


 <State 22>: 2.89ns
ST_22: tmp_10 (76)  [1/1] 2.89ns  loc: ../fc_test/fc_layer.cpp:36
:2  %tmp_10 = add i32 %tmp3, %tmp2


 <State 23>: 3.50ns
ST_23: mem_addr_1 (77)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:36
:3  %mem_addr_1 = getelementptr inbounds float* %mem, i32 %tmp_10

ST_23: input_element_req (78)  [7/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:36
:4  %input_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr_1, i32 1) nounwind


 <State 24>: 3.50ns
ST_24: input_element_req (78)  [6/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:36
:4  %input_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr_1, i32 1) nounwind


 <State 25>: 3.50ns
ST_25: input_element_req (78)  [5/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:36
:4  %input_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr_1, i32 1) nounwind


 <State 26>: 3.50ns
ST_26: input_element_req (78)  [4/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:36
:4  %input_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr_1, i32 1) nounwind


 <State 27>: 3.50ns
ST_27: input_element_req (78)  [3/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:36
:4  %input_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr_1, i32 1) nounwind


 <State 28>: 3.50ns
ST_28: input_element_req (78)  [2/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:36
:4  %input_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr_1, i32 1) nounwind


 <State 29>: 3.50ns
ST_29: input_element_req (78)  [1/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:36
:4  %input_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr_1, i32 1) nounwind


 <State 30>: 3.50ns
ST_30: input_element (79)  [1/1] 3.50ns  loc: ../fc_test/fc_layer.cpp:36
:5  %input_element = call float @_ssdm_op_Read.m_axi.floatP(float* %mem_addr_1) nounwind


 <State 31>: 2.64ns
ST_31: tmp_14 (86)  [4/4] 2.64ns  loc: ../fc_test/fc_layer.cpp:37
:12  %tmp_14 = fcmp oeq float %input_element, 0.000000e+00


 <State 32>: 2.64ns
ST_32: tmp_14 (86)  [3/4] 2.64ns  loc: ../fc_test/fc_layer.cpp:37
:12  %tmp_14 = fcmp oeq float %input_element, 0.000000e+00


 <State 33>: 2.64ns
ST_33: tmp_14 (86)  [2/4] 2.64ns  loc: ../fc_test/fc_layer.cpp:37
:12  %tmp_14 = fcmp oeq float %input_element, 0.000000e+00


 <State 34>: 3.19ns
ST_34: input_element_to_int (80)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:36
:6  %input_element_to_int = bitcast float %input_element to i32

ST_34: tmp_11 (81)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:36
:7  %tmp_11 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %input_element_to_int, i32 23, i32 30)

ST_34: tmp_12 (82)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:36
:8  %tmp_12 = trunc i32 %input_element_to_int to i23

ST_34: notlhs8 (83)  [1/1] 2.90ns  loc: ../fc_test/fc_layer.cpp:36
:9  %notlhs8 = icmp ne i8 %tmp_11, -1

ST_34: notrhs9 (84)  [1/1] 3.19ns  loc: ../fc_test/fc_layer.cpp:36
:10  %notrhs9 = icmp eq i23 %tmp_12, 0

ST_34: tmp_14 (86)  [1/4] 2.64ns  loc: ../fc_test/fc_layer.cpp:37
:12  %tmp_14 = fcmp oeq float %input_element, 0.000000e+00


 <State 35>: 2.07ns
ST_35: tmp_13 (85)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:36 (grouped into LUT with out node tmp_15)
:11  %tmp_13 = or i1 %notrhs9, %notlhs8

ST_35: tmp_15 (87)  [1/1] 2.07ns  loc: ../fc_test/fc_layer.cpp:37 (out node of the LUT)
:13  %tmp_15 = and i1 %tmp_13, %tmp_14


 <State 36>: 2.85ns
ST_36: StgValue_191 (88)  [1/1] 1.61ns  loc: ../fc_test/fc_layer.cpp:37
:14  br i1 %tmp_15, label %._crit_edge.backedge, label %3

ST_36: tmp5 (90)  [1/1] 2.85ns  loc: ../fc_test/fc_layer.cpp:38
:0  %tmp5 = add i32 %tmp_s, %i_cast


 <State 37>: 2.89ns
ST_37: tmp_16 (91)  [1/1] 2.89ns  loc: ../fc_test/fc_layer.cpp:38
:1  %tmp_16 = add i32 %tmp5, %phi_mul


 <State 38>: 3.50ns
ST_38: mem_addr_2 (92)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:38
:2  %mem_addr_2 = getelementptr inbounds float* %mem, i32 %tmp_16

ST_38: weight_element_req (93)  [7/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:38
:3  %weight_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr_2, i32 1) nounwind


 <State 39>: 3.50ns
ST_39: weight_element_req (93)  [6/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:38
:3  %weight_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr_2, i32 1) nounwind


 <State 40>: 3.50ns
ST_40: weight_element_req (93)  [5/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:38
:3  %weight_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr_2, i32 1) nounwind


 <State 41>: 3.50ns
ST_41: weight_element_req (93)  [4/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:38
:3  %weight_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr_2, i32 1) nounwind


 <State 42>: 3.50ns
ST_42: weight_element_req (93)  [3/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:38
:3  %weight_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr_2, i32 1) nounwind


 <State 43>: 3.50ns
ST_43: weight_element_req (93)  [2/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:38
:3  %weight_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr_2, i32 1) nounwind


 <State 44>: 3.50ns
ST_44: weight_element_req (93)  [1/7] 3.50ns  loc: ../fc_test/fc_layer.cpp:38
:3  %weight_element_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mem_addr_2, i32 1) nounwind


 <State 45>: 3.50ns
ST_45: weight_element (94)  [1/1] 3.50ns  loc: ../fc_test/fc_layer.cpp:38
:4  %weight_element = call float @_ssdm_op_Read.m_axi.floatP(float* %mem_addr_2) nounwind


 <State 46>: 2.64ns
ST_46: tmp_21 (101)  [4/4] 2.64ns  loc: ../fc_test/fc_layer.cpp:39
:11  %tmp_21 = fcmp oeq float %weight_element, 0.000000e+00


 <State 47>: 2.64ns
ST_47: tmp_21 (101)  [3/4] 2.64ns  loc: ../fc_test/fc_layer.cpp:39
:11  %tmp_21 = fcmp oeq float %weight_element, 0.000000e+00


 <State 48>: 2.64ns
ST_48: tmp_21 (101)  [2/4] 2.64ns  loc: ../fc_test/fc_layer.cpp:39
:11  %tmp_21 = fcmp oeq float %weight_element, 0.000000e+00


 <State 49>: 3.19ns
ST_49: weight_element_to_in (95)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:38
:5  %weight_element_to_in = bitcast float %weight_element to i32

ST_49: tmp_17 (96)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:38
:6  %tmp_17 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %weight_element_to_in, i32 23, i32 30)

ST_49: tmp_18 (97)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:38
:7  %tmp_18 = trunc i32 %weight_element_to_in to i23

ST_49: notlhs1 (98)  [1/1] 2.90ns  loc: ../fc_test/fc_layer.cpp:38
:8  %notlhs1 = icmp ne i8 %tmp_17, -1

ST_49: notrhs1 (99)  [1/1] 3.19ns  loc: ../fc_test/fc_layer.cpp:38
:9  %notrhs1 = icmp eq i23 %tmp_18, 0

ST_49: tmp_21 (101)  [1/4] 2.64ns  loc: ../fc_test/fc_layer.cpp:39
:11  %tmp_21 = fcmp oeq float %weight_element, 0.000000e+00


 <State 50>: 2.07ns
ST_50: tmp_19 (100)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:38 (grouped into LUT with out node tmp_25)
:10  %tmp_19 = or i1 %notrhs1, %notlhs1

ST_50: tmp_25 (102)  [1/1] 2.07ns  loc: ../fc_test/fc_layer.cpp:39 (out node of the LUT)
:12  %tmp_25 = and i1 %tmp_19, %tmp_21


 <State 51>: 2.65ns
ST_51: StgValue_214 (103)  [1/1] 1.61ns  loc: ../fc_test/fc_layer.cpp:39
:13  br i1 %tmp_25, label %._crit_edge.backedge, label %4

ST_51: tmp_24 (105)  [8/8] 2.65ns  loc: ../fc_test/fc_layer.cpp:40
:0  %tmp_24 = fmul float %input_element, %weight_element


 <State 52>: 2.65ns
ST_52: tmp_24 (105)  [7/8] 2.65ns  loc: ../fc_test/fc_layer.cpp:40
:0  %tmp_24 = fmul float %input_element, %weight_element


 <State 53>: 2.65ns
ST_53: tmp_24 (105)  [6/8] 2.65ns  loc: ../fc_test/fc_layer.cpp:40
:0  %tmp_24 = fmul float %input_element, %weight_element


 <State 54>: 2.65ns
ST_54: tmp_24 (105)  [5/8] 2.65ns  loc: ../fc_test/fc_layer.cpp:40
:0  %tmp_24 = fmul float %input_element, %weight_element


 <State 55>: 2.65ns
ST_55: tmp_24 (105)  [4/8] 2.65ns  loc: ../fc_test/fc_layer.cpp:40
:0  %tmp_24 = fmul float %input_element, %weight_element


 <State 56>: 2.65ns
ST_56: tmp_24 (105)  [3/8] 2.65ns  loc: ../fc_test/fc_layer.cpp:40
:0  %tmp_24 = fmul float %input_element, %weight_element


 <State 57>: 2.65ns
ST_57: tmp_24 (105)  [2/8] 2.65ns  loc: ../fc_test/fc_layer.cpp:40
:0  %tmp_24 = fmul float %input_element, %weight_element


 <State 58>: 2.65ns
ST_58: tmp_24 (105)  [1/8] 2.65ns  loc: ../fc_test/fc_layer.cpp:40
:0  %tmp_24 = fmul float %input_element, %weight_element


 <State 59>: 3.30ns
ST_59: output_element_1 (106)  [13/13] 3.30ns  loc: ../fc_test/fc_layer.cpp:40
:1  %output_element_1 = fadd float %tmp_8, %tmp_24


 <State 60>: 3.30ns
ST_60: output_element_1 (106)  [12/13] 3.30ns  loc: ../fc_test/fc_layer.cpp:40
:1  %output_element_1 = fadd float %tmp_8, %tmp_24


 <State 61>: 3.30ns
ST_61: output_element_1 (106)  [11/13] 3.30ns  loc: ../fc_test/fc_layer.cpp:40
:1  %output_element_1 = fadd float %tmp_8, %tmp_24


 <State 62>: 3.30ns
ST_62: output_element_1 (106)  [10/13] 3.30ns  loc: ../fc_test/fc_layer.cpp:40
:1  %output_element_1 = fadd float %tmp_8, %tmp_24


 <State 63>: 3.30ns
ST_63: output_element_1 (106)  [9/13] 3.30ns  loc: ../fc_test/fc_layer.cpp:40
:1  %output_element_1 = fadd float %tmp_8, %tmp_24


 <State 64>: 3.30ns
ST_64: output_element_1 (106)  [8/13] 3.30ns  loc: ../fc_test/fc_layer.cpp:40
:1  %output_element_1 = fadd float %tmp_8, %tmp_24


 <State 65>: 3.30ns
ST_65: output_element_1 (106)  [7/13] 3.30ns  loc: ../fc_test/fc_layer.cpp:40
:1  %output_element_1 = fadd float %tmp_8, %tmp_24


 <State 66>: 3.30ns
ST_66: output_element_1 (106)  [6/13] 3.30ns  loc: ../fc_test/fc_layer.cpp:40
:1  %output_element_1 = fadd float %tmp_8, %tmp_24


 <State 67>: 3.30ns
ST_67: output_element_1 (106)  [5/13] 3.30ns  loc: ../fc_test/fc_layer.cpp:40
:1  %output_element_1 = fadd float %tmp_8, %tmp_24


 <State 68>: 3.30ns
ST_68: output_element_1 (106)  [4/13] 3.30ns  loc: ../fc_test/fc_layer.cpp:40
:1  %output_element_1 = fadd float %tmp_8, %tmp_24


 <State 69>: 3.30ns
ST_69: output_element_1 (106)  [3/13] 3.30ns  loc: ../fc_test/fc_layer.cpp:40
:1  %output_element_1 = fadd float %tmp_8, %tmp_24


 <State 70>: 3.30ns
ST_70: output_element_1 (106)  [2/13] 3.30ns  loc: ../fc_test/fc_layer.cpp:40
:1  %output_element_1 = fadd float %tmp_8, %tmp_24


 <State 71>: 3.30ns
ST_71: output_element_1 (106)  [1/13] 3.30ns  loc: ../fc_test/fc_layer.cpp:40
:1  %output_element_1 = fadd float %tmp_8, %tmp_24


 <State 72>: 1.61ns
ST_72: StgValue_236 (107)  [1/1] 1.61ns  loc: ../fc_test/fc_layer.cpp:41
:2  br label %._crit_edge.backedge

ST_72: tmp_8_be (109)  [1/1] 0.00ns
._crit_edge.backedge:0  %tmp_8_be = phi float [ %tmp_8, %2 ], [ %output_element_1, %4 ], [ %tmp_8, %3 ]

ST_72: StgValue_238 (110)  [1/1] 0.00ns
._crit_edge.backedge:1  br label %._crit_edge


 <State 73>: 2.64ns
ST_73: tmp_29 (120)  [3/4] 2.64ns  loc: C:/Xilinx/Vivado_HLS/2017.2/win64/tools/clang/bin\..\lib\clang\3.1/../../../include/c++/4.5.2\bits/stl_algobase.h:214->../fc_test/fc_layer.cpp:52
:6  %tmp_29 = fcmp ogt float %tmp_8, 0.000000e+00


 <State 74>: 2.64ns
ST_74: tmp_29 (120)  [2/4] 2.64ns  loc: C:/Xilinx/Vivado_HLS/2017.2/win64/tools/clang/bin\..\lib\clang\3.1/../../../include/c++/4.5.2\bits/stl_algobase.h:214->../fc_test/fc_layer.cpp:52
:6  %tmp_29 = fcmp ogt float %tmp_8, 0.000000e+00


 <State 75>: 3.19ns
ST_75: tmp_10_to_int (114)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:31
:0  %tmp_10_to_int = bitcast float %tmp_8 to i32

ST_75: tmp_26 (115)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:31
:1  %tmp_26 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_10_to_int, i32 23, i32 30)

ST_75: tmp_27 (116)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:31
:2  %tmp_27 = trunc i32 %tmp_10_to_int to i23

ST_75: notlhs (117)  [1/1] 2.90ns  loc: ../fc_test/fc_layer.cpp:31
:3  %notlhs = icmp ne i8 %tmp_26, -1

ST_75: notrhs (118)  [1/1] 3.19ns  loc: ../fc_test/fc_layer.cpp:31
:4  %notrhs = icmp eq i23 %tmp_27, 0

ST_75: tmp_29 (120)  [1/4] 2.64ns  loc: C:/Xilinx/Vivado_HLS/2017.2/win64/tools/clang/bin\..\lib\clang\3.1/../../../include/c++/4.5.2\bits/stl_algobase.h:214->../fc_test/fc_layer.cpp:52
:6  %tmp_29 = fcmp ogt float %tmp_8, 0.000000e+00


 <State 76>: 3.50ns
ST_76: tmp_28 (119)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:31 (grouped into LUT with out node tmp_22)
:5  %tmp_28 = or i1 %notrhs, %notlhs

ST_76: tmp_30 (121)  [1/1] 0.00ns  loc: C:/Xilinx/Vivado_HLS/2017.2/win64/tools/clang/bin\..\lib\clang\3.1/../../../include/c++/4.5.2\bits/stl_algobase.h:214->../fc_test/fc_layer.cpp:52 (grouped into LUT with out node tmp_22)
:7  %tmp_30 = and i1 %tmp_28, %tmp_29

ST_76: tmp_22 (122)  [1/1] 2.07ns  loc: ../fc_test/fc_layer.cpp:52 (out node of the LUT)
:8  %tmp_22 = select i1 %tmp_30, float %tmp_8, float 0.000000e+00

ST_76: mem_addr_4 (124)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:52
:10  %mem_addr_4 = getelementptr inbounds float* %mem, i32 %tmp_23

ST_76: mem_addr_4_req (125)  [1/1] 3.50ns  loc: ../fc_test/fc_layer.cpp:52
:11  %mem_addr_4_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %mem_addr_4, i32 1) nounwind


 <State 77>: 3.50ns
ST_77: StgValue_252 (126)  [1/1] 3.50ns  loc: ../fc_test/fc_layer.cpp:52
:12  call void @_ssdm_op_Write.m_axi.floatP(float* %mem_addr_4, float %tmp_22, i4 -1) nounwind


 <State 78>: 3.50ns
ST_78: mem_addr_4_resp (127)  [5/5] 3.50ns  loc: ../fc_test/fc_layer.cpp:52
:13  %mem_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %mem_addr_4) nounwind


 <State 79>: 3.50ns
ST_79: mem_addr_4_resp (127)  [4/5] 3.50ns  loc: ../fc_test/fc_layer.cpp:52
:13  %mem_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %mem_addr_4) nounwind


 <State 80>: 3.50ns
ST_80: mem_addr_4_resp (127)  [3/5] 3.50ns  loc: ../fc_test/fc_layer.cpp:52
:13  %mem_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %mem_addr_4) nounwind


 <State 81>: 3.50ns
ST_81: mem_addr_4_resp (127)  [2/5] 3.50ns  loc: ../fc_test/fc_layer.cpp:52
:13  %mem_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %mem_addr_4) nounwind


 <State 82>: 3.50ns
ST_82: mem_addr_4_resp (127)  [1/5] 3.50ns  loc: ../fc_test/fc_layer.cpp:52
:13  %mem_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %mem_addr_4) nounwind

ST_82: StgValue_258 (128)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:52
:14  br label %8

ST_82: StgValue_259 (137)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:28
:0  br label %.preheader


 <State 83>: 3.50ns
ST_83: mem_addr_3 (131)  [1/1] 0.00ns  loc: ../fc_test/fc_layer.cpp:54
:1  %mem_addr_3 = getelementptr inbounds float* %mem, i32 %tmp_20

ST_83: mem_addr_3_req (132)  [1/1] 3.50ns  loc: ../fc_test/fc_layer.cpp:54
:2  %mem_addr_3_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %mem_addr_3, i32 1) nounwind


 <State 84>: 3.50ns
ST_84: StgValue_262 (133)  [1/1] 3.50ns  loc: ../fc_test/fc_layer.cpp:54
:3  call void @_ssdm_op_Write.m_axi.floatP(float* %mem_addr_3, float %tmp_8, i4 -1) nounwind


 <State 85>: 3.50ns
ST_85: mem_addr_3_resp (134)  [5/5] 3.50ns  loc: ../fc_test/fc_layer.cpp:54
:4  %mem_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %mem_addr_3) nounwind


 <State 86>: 3.50ns
ST_86: mem_addr_3_resp (134)  [4/5] 3.50ns  loc: ../fc_test/fc_layer.cpp:54
:4  %mem_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %mem_addr_3) nounwind


 <State 87>: 3.50ns
ST_87: mem_addr_3_resp (134)  [3/5] 3.50ns  loc: ../fc_test/fc_layer.cpp:54
:4  %mem_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %mem_addr_3) nounwind


 <State 88>: 3.50ns
ST_88: mem_addr_3_resp (134)  [2/5] 3.50ns  loc: ../fc_test/fc_layer.cpp:54
:4  %mem_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %mem_addr_3) nounwind


 <State 89>: 3.50ns
ST_89: mem_addr_3_resp (134)  [1/5] 3.50ns  loc: ../fc_test/fc_layer.cpp:54
:4  %mem_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %mem_addr_3) nounwind

ST_89: StgValue_268 (135)  [1/1] 0.00ns
:5  br label %8



============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ mem]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=2; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ input_offset]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ output_offset]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ batch_size]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ num_inputs]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ num_outputs]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ enable_relu]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
enable_relu_read     (read         ) [ 001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
num_outputs_read     (read         ) [ 001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111]
num_inputs_read      (read         ) [ 001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111]
batch_size_read      (read         ) [ 001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111]
output_offset_read   (read         ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
input_offset_read    (read         ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp                  (partselect   ) [ 001111110000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_2                (partselect   ) [ 001111110000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_1                (icmp         ) [ 000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111]
StgValue_105         (specbitsmap  ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_106         (specbitsmap  ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_107         (specbitsmap  ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_108         (specbitsmap  ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_109         (specbitsmap  ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_110         (specbitsmap  ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_111         (specbitsmap  ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_112         (spectopmodule) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_113         (specinterface) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_114         (specinterface) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_115         (specinterface) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_116         (specinterface) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_117         (specinterface) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_118         (specinterface) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_119         (specinterface) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_120         (specinterface) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
num_weights          (mul          ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
tmp_s                (zext         ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
tmp_4                (zext         ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
tmp2                 (add          ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
StgValue_125         (br           ) [ 000000011111111111111111111111111111111111111111111111111111111111111111111111111111111111]
b                    (phi          ) [ 000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000]
phi_mul1             (phi          ) [ 000000001011111111111111111111111111111111111111111111111111111111111111100000000000000000]
phi_mul3             (phi          ) [ 000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000]
next_mul4            (add          ) [ 000000011111111111111111111111111111111111111111111111111111111111111111111111111111111111]
next_mul2            (add          ) [ 000000011111111111111111111111111111111111111111111111111111111111111111111111111111111111]
b_cast               (zext         ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_3                (icmp         ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
b_1                  (add          ) [ 000000011111111111111111111111111111111111111111111111111111111111111111111111111111111111]
StgValue_134         (br           ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_6                (add          ) [ 000000000111111111111111111111111111111111111111111111111111111111111111111111111111111111]
StgValue_136         (br           ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
StgValue_137         (ret          ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
o                    (phi          ) [ 000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000]
phi_mul              (phi          ) [ 000000000111111111111111111111111111111111111111111111111111111111111111100000000000000000]
next_mul             (add          ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
o_cast               (zext         ) [ 000000000011111111111111111111111111111111111111111111111111111111111111100000000000000000]
tmp_7                (icmp         ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
o_1                  (add          ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
StgValue_144         (br           ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp1                 (add          ) [ 000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_146         (br           ) [ 000000011111111111111111111111111111111111111111111111111111111111111111111111111111111111]
tmp_9                (add          ) [ 000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000]
mem_addr             (getelementptr) [ 000000000000111111100000000000000000000000000000000000000000000000000000000000000000000000]
output_element_req   (readreq      ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
output_element       (read         ) [ 000000000000000000011111111111111111111111111111111111111111111111111111100000000000000000]
StgValue_157         (br           ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
tmp_8                (phi          ) [ 000000000000000000001111111111111111111111111111111111111111111111111111111110000001100000]
i                    (phi          ) [ 000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000]
i_cast               (zext         ) [ 000000000000000000000111111111111111100000000000000000000000000000000000000000000000000000]
tmp_5                (icmp         ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
i_1                  (add          ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
StgValue_163         (br           ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp4                 (add          ) [ 000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000]
StgValue_165         (br           ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_23               (add          ) [ 000000000000000000000000000000000000000000000000000000000000000000000000011110000000000000]
tmp_20               (add          ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000]
tmp3                 (add          ) [ 000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000]
tmp_10               (add          ) [ 000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000]
mem_addr_1           (getelementptr) [ 000000000000000000000000111111100000000000000000000000000000000000000000000000000000000000]
input_element_req    (readreq      ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
input_element        (read         ) [ 000000000000000000000000000000011111111111111111111111111110000000000000000000000000000000]
input_element_to_int (bitcast      ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_11               (partselect   ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_12               (trunc        ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
notlhs8              (icmp         ) [ 000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000]
notrhs9              (icmp         ) [ 000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000]
tmp_14               (fcmp         ) [ 000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000]
tmp_13               (or           ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_15               (and          ) [ 000000000000000000000000000000000000111111111111111111111111111111111111100000000000000000]
StgValue_191         (br           ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
tmp5                 (add          ) [ 000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000]
tmp_16               (add          ) [ 000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000]
mem_addr_2           (getelementptr) [ 000000000000000000000000000000000000000111111100000000000000000000000000000000000000000000]
weight_element_req   (readreq      ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
weight_element       (read         ) [ 000000000000000000000000000000000000000000000011111111111110000000000000000000000000000000]
weight_element_to_in (bitcast      ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_17               (partselect   ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_18               (trunc        ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
notlhs1              (icmp         ) [ 000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000]
notrhs1              (icmp         ) [ 000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000]
tmp_21               (fcmp         ) [ 000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000]
tmp_19               (or           ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_25               (and          ) [ 000000001111111111111111111111111111100000000000000111111111111111111111111111111111111111]
StgValue_214         (br           ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
tmp_24               (fmul         ) [ 000000000000000000000000000000000000000000000000000000000001111111111111000000000000000000]
output_element_1     (fadd         ) [ 000000001111111111111111111111111111111111111111111100000000000000000000111111111111111111]
StgValue_236         (br           ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_8_be             (phi          ) [ 000000001111111111111000000000000000000000000000000011111111111111111111111111111111111111]
StgValue_238         (br           ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
tmp_10_to_int        (bitcast      ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_26               (partselect   ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_27               (trunc        ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
notlhs               (icmp         ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000]
notrhs               (icmp         ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000]
tmp_29               (fcmp         ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000]
tmp_28               (or           ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_30               (and          ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_22               (select       ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000]
mem_addr_4           (getelementptr) [ 000000001111111111111111111111111111111111111111111111111111111111111111100001111111111111]
mem_addr_4_req       (writereq     ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_252         (write        ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
mem_addr_4_resp      (writeresp    ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_258         (br           ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_259         (br           ) [ 000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111]
mem_addr_3           (getelementptr) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111]
mem_addr_3_req       (writereq     ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_262         (write        ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
mem_addr_3_resp      (writeresp    ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
StgValue_268         (br           ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="mem">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="mem"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="input_offset">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="input_offset"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="output_offset">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="output_offset"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="batch_size">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="batch_size"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="num_inputs">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="num_inputs"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="num_outputs">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="num_outputs"/></StgValue>
</bind>
</comp>

<comp id="12" class="1000" name="enable_relu">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="enable_relu"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.s_axilite.i32"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i30.i32.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="fc_layer_str"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_ReadReq.m_axi.floatP"/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.m_axi.floatP"/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i8.i32.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.floatP"/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.floatP"/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.floatP"/></StgValue>
</bind>
</comp>

<comp id="74" class="1004" name="enable_relu_read_read_fu_74">
<pin_list>
<pin id="75" dir="0" index="0" bw="32" slack="0"/>
<pin id="76" dir="0" index="1" bw="32" slack="0"/>
<pin id="77" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="enable_relu_read/1 "/>
</bind>
</comp>

<comp id="80" class="1004" name="num_outputs_read_read_fu_80">
<pin_list>
<pin id="81" dir="0" index="0" bw="32" slack="0"/>
<pin id="82" dir="0" index="1" bw="32" slack="0"/>
<pin id="83" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="num_outputs_read/1 "/>
</bind>
</comp>

<comp id="86" class="1004" name="num_inputs_read_read_fu_86">
<pin_list>
<pin id="87" dir="0" index="0" bw="32" slack="0"/>
<pin id="88" dir="0" index="1" bw="32" slack="0"/>
<pin id="89" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="num_inputs_read/1 "/>
</bind>
</comp>

<comp id="92" class="1004" name="batch_size_read_read_fu_92">
<pin_list>
<pin id="93" dir="0" index="0" bw="32" slack="0"/>
<pin id="94" dir="0" index="1" bw="32" slack="0"/>
<pin id="95" dir="1" index="2" bw="32" slack="7"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="batch_size_read/1 "/>
</bind>
</comp>

<comp id="98" class="1004" name="output_offset_read_read_fu_98">
<pin_list>
<pin id="99" dir="0" index="0" bw="32" slack="0"/>
<pin id="100" dir="0" index="1" bw="32" slack="0"/>
<pin id="101" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="output_offset_read/1 "/>
</bind>
</comp>

<comp id="104" class="1004" name="input_offset_read_read_fu_104">
<pin_list>
<pin id="105" dir="0" index="0" bw="32" slack="0"/>
<pin id="106" dir="0" index="1" bw="32" slack="0"/>
<pin id="107" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="input_offset_read/1 "/>
</bind>
</comp>

<comp id="110" class="1004" name="grp_writeresp_fu_110">
<pin_list>
<pin id="111" dir="0" index="0" bw="1" slack="0"/>
<pin id="112" dir="0" index="1" bw="32" slack="0"/>
<pin id="113" dir="0" index="2" bw="32" slack="0"/>
<pin id="123" dir="0" index="4" bw="1" slack="0"/>
<pin id="114" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) readreq(1154) writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="output_element_req/11 input_element_req/23 weight_element_req/38 mem_addr_4_req/76 StgValue_252/77 mem_addr_4_resp/78 mem_addr_3_req/83 StgValue_262/84 mem_addr_3_resp/85 "/>
</bind>
</comp>

<comp id="117" class="1004" name="grp_read_fu_117">
<pin_list>
<pin id="118" dir="0" index="0" bw="32" slack="0"/>
<pin id="119" dir="0" index="1" bw="32" slack="7"/>
<pin id="120" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="output_element/18 input_element/30 weight_element/45 "/>
</bind>
</comp>

<comp id="127" class="1005" name="b_reg_127">
<pin_list>
<pin id="128" dir="0" index="0" bw="31" slack="1"/>
<pin id="129" dir="1" index="1" bw="31" slack="1"/>
</pin_list>
<bind>
<opset="b (phireg) "/>
</bind>
</comp>

<comp id="131" class="1004" name="b_phi_fu_131">
<pin_list>
<pin id="132" dir="0" index="0" bw="1" slack="1"/>
<pin id="133" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="134" dir="0" index="2" bw="31" slack="0"/>
<pin id="135" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="136" dir="1" index="4" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="b/8 "/>
</bind>
</comp>

<comp id="138" class="1005" name="phi_mul1_reg_138">
<pin_list>
<pin id="139" dir="0" index="0" bw="32" slack="1"/>
<pin id="140" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="phi_mul1 (phireg) "/>
</bind>
</comp>

<comp id="142" class="1004" name="phi_mul1_phi_fu_142">
<pin_list>
<pin id="143" dir="0" index="0" bw="1" slack="1"/>
<pin id="144" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="145" dir="0" index="2" bw="32" slack="0"/>
<pin id="146" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="147" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="phi_mul1/8 "/>
</bind>
</comp>

<comp id="150" class="1005" name="phi_mul3_reg_150">
<pin_list>
<pin id="151" dir="0" index="0" bw="32" slack="1"/>
<pin id="152" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="phi_mul3 (phireg) "/>
</bind>
</comp>

<comp id="154" class="1004" name="phi_mul3_phi_fu_154">
<pin_list>
<pin id="155" dir="0" index="0" bw="1" slack="1"/>
<pin id="156" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="157" dir="0" index="2" bw="32" slack="0"/>
<pin id="158" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="159" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="phi_mul3/8 "/>
</bind>
</comp>

<comp id="161" class="1005" name="o_reg_161">
<pin_list>
<pin id="162" dir="0" index="0" bw="31" slack="1"/>
<pin id="163" dir="1" index="1" bw="31" slack="1"/>
</pin_list>
<bind>
<opset="o (phireg) "/>
</bind>
</comp>

<comp id="165" class="1004" name="o_phi_fu_165">
<pin_list>
<pin id="166" dir="0" index="0" bw="31" slack="0"/>
<pin id="167" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="168" dir="0" index="2" bw="1" slack="1"/>
<pin id="169" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="170" dir="1" index="4" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="o/9 "/>
</bind>
</comp>

<comp id="172" class="1005" name="phi_mul_reg_172">
<pin_list>
<pin id="173" dir="0" index="0" bw="32" slack="1"/>
<pin id="174" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="phi_mul (phireg) "/>
</bind>
</comp>

<comp id="176" class="1004" name="phi_mul_phi_fu_176">
<pin_list>
<pin id="177" dir="0" index="0" bw="32" slack="0"/>
<pin id="178" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="179" dir="0" index="2" bw="1" slack="1"/>
<pin id="180" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="181" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="phi_mul/9 "/>
</bind>
</comp>

<comp id="184" class="1005" name="tmp_8_reg_184">
<pin_list>
<pin id="185" dir="0" index="0" bw="32" slack="1"/>
<pin id="186" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="tmp_8 (phireg) "/>
</bind>
</comp>

<comp id="188" class="1004" name="tmp_8_phi_fu_188">
<pin_list>
<pin id="189" dir="0" index="0" bw="32" slack="2"/>
<pin id="190" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="191" dir="0" index="2" bw="32" slack="1"/>
<pin id="192" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="193" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="tmp_8/20 "/>
</bind>
</comp>

<comp id="195" class="1005" name="i_reg_195">
<pin_list>
<pin id="196" dir="0" index="0" bw="31" slack="1"/>
<pin id="197" dir="1" index="1" bw="31" slack="1"/>
</pin_list>
<bind>
<opset="i (phireg) "/>
</bind>
</comp>

<comp id="199" class="1004" name="i_phi_fu_199">
<pin_list>
<pin id="200" dir="0" index="0" bw="1" slack="1"/>
<pin id="201" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="202" dir="0" index="2" bw="31" slack="0"/>
<pin id="203" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="204" dir="1" index="4" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="i/20 "/>
</bind>
</comp>

<comp id="206" class="1005" name="tmp_8_be_reg_206">
<pin_list>
<pin id="207" dir="0" index="0" bw="32" slack="1"/>
<pin id="208" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_8_be (phireg) "/>
</bind>
</comp>

<comp id="210" class="1004" name="tmp_8_be_phi_fu_210">
<pin_list>
<pin id="211" dir="0" index="0" bw="32" slack="52"/>
<pin id="212" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="213" dir="0" index="2" bw="32" slack="1"/>
<pin id="214" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="215" dir="0" index="4" bw="32" slack="52"/>
<pin id="216" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="217" dir="1" index="6" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="tmp_8_be/72 "/>
</bind>
</comp>

<comp id="221" class="1004" name="grp_fu_221">
<pin_list>
<pin id="222" dir="0" index="0" bw="32" slack="39"/>
<pin id="223" dir="0" index="1" bw="32" slack="1"/>
<pin id="224" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="fadd(9) " fcode="fadd"/>
<opset="output_element_1/59 "/>
</bind>
</comp>

<comp id="226" class="1004" name="grp_fu_226">
<pin_list>
<pin id="227" dir="0" index="0" bw="32" slack="21"/>
<pin id="228" dir="0" index="1" bw="32" slack="6"/>
<pin id="229" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="fmul(13) " fcode="fmul"/>
<opset="tmp_24/51 "/>
</bind>
</comp>

<comp id="230" class="1004" name="grp_fu_230">
<pin_list>
<pin id="231" dir="0" index="0" bw="32" slack="0"/>
<pin id="232" dir="0" index="1" bw="32" slack="0"/>
<pin id="233" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="fcmp(46) " fcode="fcmp"/>
<opset="tmp_29/20 tmp_14/31 tmp_21/46 "/>
</bind>
</comp>

<comp id="236" class="1004" name="grp_fu_236">
<pin_list>
<pin id="237" dir="0" index="0" bw="31" slack="11"/>
<pin id="238" dir="0" index="1" bw="32" slack="12"/>
<pin id="239" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp_23/20 tmp_20/20 "/>
</bind>
</comp>

<comp id="240" class="1005" name="reg_240">
<pin_list>
<pin id="241" dir="0" index="0" bw="32" slack="1"/>
<pin id="242" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_23 tmp_20 "/>
</bind>
</comp>

<comp id="244" class="1004" name="grp_fu_244">
<pin_list>
<pin id="245" dir="0" index="0" bw="32" slack="0"/>
<pin id="246" dir="0" index="1" bw="32" slack="1"/>
<pin id="247" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="mem_addr_4/76 mem_addr_3/83 "/>
</bind>
</comp>

<comp id="251" class="1004" name="grp_fu_251">
<pin_list>
<pin id="252" dir="0" index="0" bw="32" slack="0"/>
<pin id="253" dir="0" index="1" bw="32" slack="0"/>
<pin id="254" dir="1" index="2" bw="32" slack="3"/>
</pin_list>
<bind>
<opcode="mul(12) " fcode="mul"/>
<opset="num_weights/1 "/>
</bind>
</comp>

<comp id="257" class="1004" name="tmp_fu_257">
<pin_list>
<pin id="258" dir="0" index="0" bw="30" slack="0"/>
<pin id="259" dir="0" index="1" bw="32" slack="0"/>
<pin id="260" dir="0" index="2" bw="3" slack="0"/>
<pin id="261" dir="0" index="3" bw="6" slack="0"/>
<pin id="262" dir="1" index="4" bw="30" slack="6"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp/1 "/>
</bind>
</comp>

<comp id="267" class="1004" name="tmp_2_fu_267">
<pin_list>
<pin id="268" dir="0" index="0" bw="30" slack="0"/>
<pin id="269" dir="0" index="1" bw="32" slack="0"/>
<pin id="270" dir="0" index="2" bw="3" slack="0"/>
<pin id="271" dir="0" index="3" bw="6" slack="0"/>
<pin id="272" dir="1" index="4" bw="30" slack="6"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_2/1 "/>
</bind>
</comp>

<comp id="277" class="1004" name="tmp_1_fu_277">
<pin_list>
<pin id="278" dir="0" index="0" bw="32" slack="1"/>
<pin id="279" dir="0" index="1" bw="32" slack="0"/>
<pin id="280" dir="1" index="2" bw="1" slack="18"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_1/2 "/>
</bind>
</comp>

<comp id="282" class="1004" name="tmp_s_fu_282">
<pin_list>
<pin id="283" dir="0" index="0" bw="30" slack="6"/>
<pin id="284" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="tmp_s/7 "/>
</bind>
</comp>

<comp id="285" class="1004" name="tmp_4_fu_285">
<pin_list>
<pin id="286" dir="0" index="0" bw="30" slack="6"/>
<pin id="287" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="tmp_4/7 "/>
</bind>
</comp>

<comp id="288" class="1004" name="tmp2_fu_288">
<pin_list>
<pin id="289" dir="0" index="0" bw="30" slack="0"/>
<pin id="290" dir="0" index="1" bw="32" slack="6"/>
<pin id="291" dir="1" index="2" bw="32" slack="15"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp2/7 "/>
</bind>
</comp>

<comp id="293" class="1004" name="next_mul4_fu_293">
<pin_list>
<pin id="294" dir="0" index="0" bw="32" slack="0"/>
<pin id="295" dir="0" index="1" bw="32" slack="7"/>
<pin id="296" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="next_mul4/8 "/>
</bind>
</comp>

<comp id="298" class="1004" name="next_mul2_fu_298">
<pin_list>
<pin id="299" dir="0" index="0" bw="32" slack="0"/>
<pin id="300" dir="0" index="1" bw="32" slack="7"/>
<pin id="301" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="next_mul2/8 "/>
</bind>
</comp>

<comp id="303" class="1004" name="b_cast_fu_303">
<pin_list>
<pin id="304" dir="0" index="0" bw="31" slack="0"/>
<pin id="305" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="b_cast/8 "/>
</bind>
</comp>

<comp id="307" class="1004" name="tmp_3_fu_307">
<pin_list>
<pin id="308" dir="0" index="0" bw="32" slack="0"/>
<pin id="309" dir="0" index="1" bw="32" slack="7"/>
<pin id="310" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_3/8 "/>
</bind>
</comp>

<comp id="312" class="1004" name="b_1_fu_312">
<pin_list>
<pin id="313" dir="0" index="0" bw="31" slack="0"/>
<pin id="314" dir="0" index="1" bw="1" slack="0"/>
<pin id="315" dir="1" index="2" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="b_1/8 "/>
</bind>
</comp>

<comp id="318" class="1004" name="tmp_6_fu_318">
<pin_list>
<pin id="319" dir="0" index="0" bw="32" slack="0"/>
<pin id="320" dir="0" index="1" bw="30" slack="1"/>
<pin id="321" dir="1" index="2" bw="32" slack="12"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp_6/8 "/>
</bind>
</comp>

<comp id="323" class="1004" name="next_mul_fu_323">
<pin_list>
<pin id="324" dir="0" index="0" bw="32" slack="0"/>
<pin id="325" dir="0" index="1" bw="32" slack="8"/>
<pin id="326" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="next_mul/9 "/>
</bind>
</comp>

<comp id="328" class="1004" name="o_cast_fu_328">
<pin_list>
<pin id="329" dir="0" index="0" bw="31" slack="0"/>
<pin id="330" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="o_cast/9 "/>
</bind>
</comp>

<comp id="332" class="1004" name="tmp_7_fu_332">
<pin_list>
<pin id="333" dir="0" index="0" bw="32" slack="0"/>
<pin id="334" dir="0" index="1" bw="32" slack="8"/>
<pin id="335" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_7/9 "/>
</bind>
</comp>

<comp id="337" class="1004" name="o_1_fu_337">
<pin_list>
<pin id="338" dir="0" index="0" bw="31" slack="0"/>
<pin id="339" dir="0" index="1" bw="1" slack="0"/>
<pin id="340" dir="1" index="2" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="o_1/9 "/>
</bind>
</comp>

<comp id="343" class="1004" name="tmp1_fu_343">
<pin_list>
<pin id="344" dir="0" index="0" bw="30" slack="2"/>
<pin id="345" dir="0" index="1" bw="31" slack="0"/>
<pin id="346" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp1/9 "/>
</bind>
</comp>

<comp id="348" class="1004" name="tmp_9_fu_348">
<pin_list>
<pin id="349" dir="0" index="0" bw="32" slack="1"/>
<pin id="350" dir="0" index="1" bw="32" slack="3"/>
<pin id="351" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp_9/10 "/>
</bind>
</comp>

<comp id="352" class="1004" name="mem_addr_fu_352">
<pin_list>
<pin id="353" dir="0" index="0" bw="32" slack="0"/>
<pin id="354" dir="0" index="1" bw="32" slack="1"/>
<pin id="355" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="mem_addr/11 "/>
</bind>
</comp>

<comp id="358" class="1004" name="i_cast_fu_358">
<pin_list>
<pin id="359" dir="0" index="0" bw="31" slack="0"/>
<pin id="360" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="i_cast/20 "/>
</bind>
</comp>

<comp id="362" class="1004" name="tmp_5_fu_362">
<pin_list>
<pin id="363" dir="0" index="0" bw="32" slack="0"/>
<pin id="364" dir="0" index="1" bw="32" slack="19"/>
<pin id="365" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_5/20 "/>
</bind>
</comp>

<comp id="367" class="1004" name="i_1_fu_367">
<pin_list>
<pin id="368" dir="0" index="0" bw="31" slack="0"/>
<pin id="369" dir="0" index="1" bw="1" slack="0"/>
<pin id="370" dir="1" index="2" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="i_1/20 "/>
</bind>
</comp>

<comp id="373" class="1004" name="tmp4_fu_373">
<pin_list>
<pin id="374" dir="0" index="0" bw="32" slack="12"/>
<pin id="375" dir="0" index="1" bw="31" slack="0"/>
<pin id="376" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp4/20 "/>
</bind>
</comp>

<comp id="379" class="1004" name="tmp3_fu_379">
<pin_list>
<pin id="380" dir="0" index="0" bw="32" slack="1"/>
<pin id="381" dir="0" index="1" bw="32" slack="14"/>
<pin id="382" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp3/21 "/>
</bind>
</comp>

<comp id="383" class="1004" name="tmp_10_fu_383">
<pin_list>
<pin id="384" dir="0" index="0" bw="32" slack="1"/>
<pin id="385" dir="0" index="1" bw="32" slack="15"/>
<pin id="386" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp_10/22 "/>
</bind>
</comp>

<comp id="387" class="1004" name="mem_addr_1_fu_387">
<pin_list>
<pin id="388" dir="0" index="0" bw="32" slack="0"/>
<pin id="389" dir="0" index="1" bw="32" slack="1"/>
<pin id="390" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="mem_addr_1/23 "/>
</bind>
</comp>

<comp id="393" class="1004" name="input_element_to_int_fu_393">
<pin_list>
<pin id="394" dir="0" index="0" bw="32" slack="4"/>
<pin id="395" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="input_element_to_int/34 "/>
</bind>
</comp>

<comp id="396" class="1004" name="tmp_11_fu_396">
<pin_list>
<pin id="397" dir="0" index="0" bw="8" slack="0"/>
<pin id="398" dir="0" index="1" bw="32" slack="0"/>
<pin id="399" dir="0" index="2" bw="6" slack="0"/>
<pin id="400" dir="0" index="3" bw="6" slack="0"/>
<pin id="401" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_11/34 "/>
</bind>
</comp>

<comp id="406" class="1004" name="tmp_12_fu_406">
<pin_list>
<pin id="407" dir="0" index="0" bw="32" slack="0"/>
<pin id="408" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp_12/34 "/>
</bind>
</comp>

<comp id="410" class="1004" name="notlhs8_fu_410">
<pin_list>
<pin id="411" dir="0" index="0" bw="8" slack="0"/>
<pin id="412" dir="0" index="1" bw="8" slack="0"/>
<pin id="413" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="notlhs8/34 "/>
</bind>
</comp>

<comp id="416" class="1004" name="notrhs9_fu_416">
<pin_list>
<pin id="417" dir="0" index="0" bw="23" slack="0"/>
<pin id="418" dir="0" index="1" bw="23" slack="0"/>
<pin id="419" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="notrhs9/34 "/>
</bind>
</comp>

<comp id="422" class="1004" name="tmp_13_fu_422">
<pin_list>
<pin id="423" dir="0" index="0" bw="1" slack="1"/>
<pin id="424" dir="0" index="1" bw="1" slack="1"/>
<pin id="425" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="tmp_13/35 "/>
</bind>
</comp>

<comp id="426" class="1004" name="tmp_15_fu_426">
<pin_list>
<pin id="427" dir="0" index="0" bw="1" slack="0"/>
<pin id="428" dir="0" index="1" bw="1" slack="1"/>
<pin id="429" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="tmp_15/35 "/>
</bind>
</comp>

<comp id="431" class="1004" name="tmp5_fu_431">
<pin_list>
<pin id="432" dir="0" index="0" bw="30" slack="29"/>
<pin id="433" dir="0" index="1" bw="31" slack="16"/>
<pin id="434" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp5/36 "/>
</bind>
</comp>

<comp id="435" class="1004" name="tmp_16_fu_435">
<pin_list>
<pin id="436" dir="0" index="0" bw="32" slack="1"/>
<pin id="437" dir="0" index="1" bw="32" slack="28"/>
<pin id="438" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp_16/37 "/>
</bind>
</comp>

<comp id="440" class="1004" name="mem_addr_2_fu_440">
<pin_list>
<pin id="441" dir="0" index="0" bw="32" slack="0"/>
<pin id="442" dir="0" index="1" bw="32" slack="1"/>
<pin id="443" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="mem_addr_2/38 "/>
</bind>
</comp>

<comp id="446" class="1004" name="weight_element_to_in_fu_446">
<pin_list>
<pin id="447" dir="0" index="0" bw="32" slack="4"/>
<pin id="448" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="weight_element_to_in/49 "/>
</bind>
</comp>

<comp id="449" class="1004" name="tmp_17_fu_449">
<pin_list>
<pin id="450" dir="0" index="0" bw="8" slack="0"/>
<pin id="451" dir="0" index="1" bw="32" slack="0"/>
<pin id="452" dir="0" index="2" bw="6" slack="0"/>
<pin id="453" dir="0" index="3" bw="6" slack="0"/>
<pin id="454" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_17/49 "/>
</bind>
</comp>

<comp id="459" class="1004" name="tmp_18_fu_459">
<pin_list>
<pin id="460" dir="0" index="0" bw="32" slack="0"/>
<pin id="461" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp_18/49 "/>
</bind>
</comp>

<comp id="463" class="1004" name="notlhs1_fu_463">
<pin_list>
<pin id="464" dir="0" index="0" bw="8" slack="0"/>
<pin id="465" dir="0" index="1" bw="8" slack="0"/>
<pin id="466" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="notlhs1/49 "/>
</bind>
</comp>

<comp id="469" class="1004" name="notrhs1_fu_469">
<pin_list>
<pin id="470" dir="0" index="0" bw="23" slack="0"/>
<pin id="471" dir="0" index="1" bw="23" slack="0"/>
<pin id="472" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="notrhs1/49 "/>
</bind>
</comp>

<comp id="475" class="1004" name="tmp_19_fu_475">
<pin_list>
<pin id="476" dir="0" index="0" bw="1" slack="1"/>
<pin id="477" dir="0" index="1" bw="1" slack="1"/>
<pin id="478" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="tmp_19/50 "/>
</bind>
</comp>

<comp id="479" class="1004" name="tmp_25_fu_479">
<pin_list>
<pin id="480" dir="0" index="0" bw="1" slack="0"/>
<pin id="481" dir="0" index="1" bw="1" slack="1"/>
<pin id="482" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="tmp_25/50 "/>
</bind>
</comp>

<comp id="484" class="1004" name="tmp_10_to_int_fu_484">
<pin_list>
<pin id="485" dir="0" index="0" bw="32" slack="3"/>
<pin id="486" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="tmp_10_to_int/75 "/>
</bind>
</comp>

<comp id="488" class="1004" name="tmp_26_fu_488">
<pin_list>
<pin id="489" dir="0" index="0" bw="8" slack="0"/>
<pin id="490" dir="0" index="1" bw="32" slack="0"/>
<pin id="491" dir="0" index="2" bw="6" slack="0"/>
<pin id="492" dir="0" index="3" bw="6" slack="0"/>
<pin id="493" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_26/75 "/>
</bind>
</comp>

<comp id="498" class="1004" name="tmp_27_fu_498">
<pin_list>
<pin id="499" dir="0" index="0" bw="32" slack="0"/>
<pin id="500" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp_27/75 "/>
</bind>
</comp>

<comp id="502" class="1004" name="notlhs_fu_502">
<pin_list>
<pin id="503" dir="0" index="0" bw="8" slack="0"/>
<pin id="504" dir="0" index="1" bw="8" slack="0"/>
<pin id="505" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="notlhs/75 "/>
</bind>
</comp>

<comp id="508" class="1004" name="notrhs_fu_508">
<pin_list>
<pin id="509" dir="0" index="0" bw="23" slack="0"/>
<pin id="510" dir="0" index="1" bw="23" slack="0"/>
<pin id="511" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="notrhs/75 "/>
</bind>
</comp>

<comp id="514" class="1004" name="tmp_28_fu_514">
<pin_list>
<pin id="515" dir="0" index="0" bw="1" slack="1"/>
<pin id="516" dir="0" index="1" bw="1" slack="1"/>
<pin id="517" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="tmp_28/76 "/>
</bind>
</comp>

<comp id="518" class="1004" name="tmp_30_fu_518">
<pin_list>
<pin id="519" dir="0" index="0" bw="1" slack="0"/>
<pin id="520" dir="0" index="1" bw="1" slack="1"/>
<pin id="521" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="tmp_30/76 "/>
</bind>
</comp>

<comp id="523" class="1004" name="tmp_22_fu_523">
<pin_list>
<pin id="524" dir="0" index="0" bw="1" slack="0"/>
<pin id="525" dir="0" index="1" bw="32" slack="4"/>
<pin id="526" dir="0" index="2" bw="32" slack="0"/>
<pin id="527" dir="1" index="3" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="tmp_22/76 "/>
</bind>
</comp>

<comp id="531" class="1005" name="enable_relu_read_reg_531">
<pin_list>
<pin id="532" dir="0" index="0" bw="32" slack="1"/>
<pin id="533" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="enable_relu_read "/>
</bind>
</comp>

<comp id="536" class="1005" name="num_outputs_read_reg_536">
<pin_list>
<pin id="537" dir="0" index="0" bw="32" slack="1"/>
<pin id="538" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="num_outputs_read "/>
</bind>
</comp>

<comp id="544" class="1005" name="num_inputs_read_reg_544">
<pin_list>
<pin id="545" dir="0" index="0" bw="32" slack="1"/>
<pin id="546" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="num_inputs_read "/>
</bind>
</comp>

<comp id="552" class="1005" name="batch_size_read_reg_552">
<pin_list>
<pin id="553" dir="0" index="0" bw="32" slack="7"/>
<pin id="554" dir="1" index="1" bw="32" slack="7"/>
</pin_list>
<bind>
<opset="batch_size_read "/>
</bind>
</comp>

<comp id="557" class="1005" name="tmp_reg_557">
<pin_list>
<pin id="558" dir="0" index="0" bw="30" slack="6"/>
<pin id="559" dir="1" index="1" bw="30" slack="6"/>
</pin_list>
<bind>
<opset="tmp "/>
</bind>
</comp>

<comp id="562" class="1005" name="tmp_2_reg_562">
<pin_list>
<pin id="563" dir="0" index="0" bw="30" slack="6"/>
<pin id="564" dir="1" index="1" bw="30" slack="6"/>
</pin_list>
<bind>
<opset="tmp_2 "/>
</bind>
</comp>

<comp id="567" class="1005" name="tmp_1_reg_567">
<pin_list>
<pin id="568" dir="0" index="0" bw="1" slack="18"/>
<pin id="569" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="tmp_1 "/>
</bind>
</comp>

<comp id="571" class="1005" name="num_weights_reg_571">
<pin_list>
<pin id="572" dir="0" index="0" bw="32" slack="3"/>
<pin id="573" dir="1" index="1" bw="32" slack="3"/>
</pin_list>
<bind>
<opset="num_weights "/>
</bind>
</comp>

<comp id="577" class="1005" name="tmp_s_reg_577">
<pin_list>
<pin id="578" dir="0" index="0" bw="32" slack="2"/>
<pin id="579" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="tmp_s "/>
</bind>
</comp>

<comp id="583" class="1005" name="tmp_4_reg_583">
<pin_list>
<pin id="584" dir="0" index="0" bw="32" slack="1"/>
<pin id="585" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_4 "/>
</bind>
</comp>

<comp id="588" class="1005" name="tmp2_reg_588">
<pin_list>
<pin id="589" dir="0" index="0" bw="32" slack="15"/>
<pin id="590" dir="1" index="1" bw="32" slack="15"/>
</pin_list>
<bind>
<opset="tmp2 "/>
</bind>
</comp>

<comp id="593" class="1005" name="next_mul4_reg_593">
<pin_list>
<pin id="594" dir="0" index="0" bw="32" slack="0"/>
<pin id="595" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opset="next_mul4 "/>
</bind>
</comp>

<comp id="598" class="1005" name="next_mul2_reg_598">
<pin_list>
<pin id="599" dir="0" index="0" bw="32" slack="0"/>
<pin id="600" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opset="next_mul2 "/>
</bind>
</comp>

<comp id="606" class="1005" name="b_1_reg_606">
<pin_list>
<pin id="607" dir="0" index="0" bw="31" slack="0"/>
<pin id="608" dir="1" index="1" bw="31" slack="0"/>
</pin_list>
<bind>
<opset="b_1 "/>
</bind>
</comp>

<comp id="611" class="1005" name="tmp_6_reg_611">
<pin_list>
<pin id="612" dir="0" index="0" bw="32" slack="12"/>
<pin id="613" dir="1" index="1" bw="32" slack="12"/>
</pin_list>
<bind>
<opset="tmp_6 "/>
</bind>
</comp>

<comp id="616" class="1005" name="next_mul_reg_616">
<pin_list>
<pin id="617" dir="0" index="0" bw="32" slack="0"/>
<pin id="618" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opset="next_mul "/>
</bind>
</comp>

<comp id="621" class="1005" name="o_cast_reg_621">
<pin_list>
<pin id="622" dir="0" index="0" bw="32" slack="11"/>
<pin id="623" dir="1" index="1" bw="32" slack="11"/>
</pin_list>
<bind>
<opset="o_cast "/>
</bind>
</comp>

<comp id="629" class="1005" name="o_1_reg_629">
<pin_list>
<pin id="630" dir="0" index="0" bw="31" slack="0"/>
<pin id="631" dir="1" index="1" bw="31" slack="0"/>
</pin_list>
<bind>
<opset="o_1 "/>
</bind>
</comp>

<comp id="634" class="1005" name="tmp1_reg_634">
<pin_list>
<pin id="635" dir="0" index="0" bw="32" slack="1"/>
<pin id="636" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp1 "/>
</bind>
</comp>

<comp id="639" class="1005" name="tmp_9_reg_639">
<pin_list>
<pin id="640" dir="0" index="0" bw="32" slack="1"/>
<pin id="641" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_9 "/>
</bind>
</comp>

<comp id="644" class="1005" name="mem_addr_reg_644">
<pin_list>
<pin id="645" dir="0" index="0" bw="32" slack="1"/>
<pin id="646" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="mem_addr "/>
</bind>
</comp>

<comp id="650" class="1005" name="output_element_reg_650">
<pin_list>
<pin id="651" dir="0" index="0" bw="32" slack="2"/>
<pin id="652" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="output_element "/>
</bind>
</comp>

<comp id="655" class="1005" name="i_cast_reg_655">
<pin_list>
<pin id="656" dir="0" index="0" bw="32" slack="16"/>
<pin id="657" dir="1" index="1" bw="32" slack="16"/>
</pin_list>
<bind>
<opset="i_cast "/>
</bind>
</comp>

<comp id="663" class="1005" name="i_1_reg_663">
<pin_list>
<pin id="664" dir="0" index="0" bw="31" slack="0"/>
<pin id="665" dir="1" index="1" bw="31" slack="0"/>
</pin_list>
<bind>
<opset="i_1 "/>
</bind>
</comp>

<comp id="668" class="1005" name="tmp4_reg_668">
<pin_list>
<pin id="669" dir="0" index="0" bw="32" slack="1"/>
<pin id="670" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp4 "/>
</bind>
</comp>

<comp id="673" class="1005" name="tmp3_reg_673">
<pin_list>
<pin id="674" dir="0" index="0" bw="32" slack="1"/>
<pin id="675" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp3 "/>
</bind>
</comp>

<comp id="678" class="1005" name="tmp_10_reg_678">
<pin_list>
<pin id="679" dir="0" index="0" bw="32" slack="1"/>
<pin id="680" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_10 "/>
</bind>
</comp>

<comp id="683" class="1005" name="mem_addr_1_reg_683">
<pin_list>
<pin id="684" dir="0" index="0" bw="32" slack="1"/>
<pin id="685" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="mem_addr_1 "/>
</bind>
</comp>

<comp id="689" class="1005" name="input_element_reg_689">
<pin_list>
<pin id="690" dir="0" index="0" bw="32" slack="1"/>
<pin id="691" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="input_element "/>
</bind>
</comp>

<comp id="696" class="1005" name="notlhs8_reg_696">
<pin_list>
<pin id="697" dir="0" index="0" bw="1" slack="1"/>
<pin id="698" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="notlhs8 "/>
</bind>
</comp>

<comp id="701" class="1005" name="notrhs9_reg_701">
<pin_list>
<pin id="702" dir="0" index="0" bw="1" slack="1"/>
<pin id="703" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="notrhs9 "/>
</bind>
</comp>

<comp id="706" class="1005" name="tmp_14_reg_706">
<pin_list>
<pin id="707" dir="0" index="0" bw="1" slack="1"/>
<pin id="708" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="tmp_14 "/>
</bind>
</comp>

<comp id="711" class="1005" name="tmp_15_reg_711">
<pin_list>
<pin id="712" dir="0" index="0" bw="1" slack="1"/>
<pin id="713" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="tmp_15 "/>
</bind>
</comp>

<comp id="715" class="1005" name="tmp5_reg_715">
<pin_list>
<pin id="716" dir="0" index="0" bw="32" slack="1"/>
<pin id="717" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp5 "/>
</bind>
</comp>

<comp id="720" class="1005" name="tmp_16_reg_720">
<pin_list>
<pin id="721" dir="0" index="0" bw="32" slack="1"/>
<pin id="722" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_16 "/>
</bind>
</comp>

<comp id="725" class="1005" name="mem_addr_2_reg_725">
<pin_list>
<pin id="726" dir="0" index="0" bw="32" slack="1"/>
<pin id="727" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="mem_addr_2 "/>
</bind>
</comp>

<comp id="731" class="1005" name="weight_element_reg_731">
<pin_list>
<pin id="732" dir="0" index="0" bw="32" slack="1"/>
<pin id="733" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="weight_element "/>
</bind>
</comp>

<comp id="738" class="1005" name="notlhs1_reg_738">
<pin_list>
<pin id="739" dir="0" index="0" bw="1" slack="1"/>
<pin id="740" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="notlhs1 "/>
</bind>
</comp>

<comp id="743" class="1005" name="notrhs1_reg_743">
<pin_list>
<pin id="744" dir="0" index="0" bw="1" slack="1"/>
<pin id="745" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="notrhs1 "/>
</bind>
</comp>

<comp id="748" class="1005" name="tmp_21_reg_748">
<pin_list>
<pin id="749" dir="0" index="0" bw="1" slack="1"/>
<pin id="750" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="tmp_21 "/>
</bind>
</comp>

<comp id="753" class="1005" name="tmp_25_reg_753">
<pin_list>
<pin id="754" dir="0" index="0" bw="1" slack="1"/>
<pin id="755" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="tmp_25 "/>
</bind>
</comp>

<comp id="757" class="1005" name="tmp_24_reg_757">
<pin_list>
<pin id="758" dir="0" index="0" bw="32" slack="1"/>
<pin id="759" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_24 "/>
</bind>
</comp>

<comp id="762" class="1005" name="output_element_1_reg_762">
<pin_list>
<pin id="763" dir="0" index="0" bw="32" slack="1"/>
<pin id="764" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="output_element_1 "/>
</bind>
</comp>

<comp id="767" class="1005" name="notlhs_reg_767">
<pin_list>
<pin id="768" dir="0" index="0" bw="1" slack="1"/>
<pin id="769" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="notlhs "/>
</bind>
</comp>

<comp id="772" class="1005" name="notrhs_reg_772">
<pin_list>
<pin id="773" dir="0" index="0" bw="1" slack="1"/>
<pin id="774" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="notrhs "/>
</bind>
</comp>

<comp id="777" class="1005" name="tmp_29_reg_777">
<pin_list>
<pin id="778" dir="0" index="0" bw="1" slack="1"/>
<pin id="779" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="tmp_29 "/>
</bind>
</comp>

<comp id="782" class="1005" name="tmp_22_reg_782">
<pin_list>
<pin id="783" dir="0" index="0" bw="32" slack="1"/>
<pin id="784" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_22 "/>
</bind>
</comp>

<comp id="787" class="1005" name="mem_addr_4_reg_787">
<pin_list>
<pin id="788" dir="0" index="0" bw="32" slack="1"/>
<pin id="789" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="mem_addr_4 "/>
</bind>
</comp>

<comp id="792" class="1005" name="mem_addr_3_reg_792">
<pin_list>
<pin id="793" dir="0" index="0" bw="32" slack="1"/>
<pin id="794" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="mem_addr_3 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="78"><net_src comp="14" pin="0"/><net_sink comp="74" pin=0"/></net>

<net id="79"><net_src comp="12" pin="0"/><net_sink comp="74" pin=1"/></net>

<net id="84"><net_src comp="14" pin="0"/><net_sink comp="80" pin=0"/></net>

<net id="85"><net_src comp="10" pin="0"/><net_sink comp="80" pin=1"/></net>

<net id="90"><net_src comp="14" pin="0"/><net_sink comp="86" pin=0"/></net>

<net id="91"><net_src comp="8" pin="0"/><net_sink comp="86" pin=1"/></net>

<net id="96"><net_src comp="14" pin="0"/><net_sink comp="92" pin=0"/></net>

<net id="97"><net_src comp="6" pin="0"/><net_sink comp="92" pin=1"/></net>

<net id="102"><net_src comp="14" pin="0"/><net_sink comp="98" pin=0"/></net>

<net id="103"><net_src comp="4" pin="0"/><net_sink comp="98" pin=1"/></net>

<net id="108"><net_src comp="14" pin="0"/><net_sink comp="104" pin=0"/></net>

<net id="109"><net_src comp="2" pin="0"/><net_sink comp="104" pin=1"/></net>

<net id="115"><net_src comp="48" pin="0"/><net_sink comp="110" pin=0"/></net>

<net id="116"><net_src comp="50" pin="0"/><net_sink comp="110" pin=2"/></net>

<net id="121"><net_src comp="52" pin="0"/><net_sink comp="117" pin=0"/></net>

<net id="122"><net_src comp="66" pin="0"/><net_sink comp="110" pin=0"/></net>

<net id="124"><net_src comp="68" pin="0"/><net_sink comp="110" pin=0"/></net>

<net id="125"><net_src comp="70" pin="0"/><net_sink comp="110" pin=4"/></net>

<net id="126"><net_src comp="72" pin="0"/><net_sink comp="110" pin=0"/></net>

<net id="130"><net_src comp="44" pin="0"/><net_sink comp="127" pin=0"/></net>

<net id="137"><net_src comp="127" pin="1"/><net_sink comp="131" pin=0"/></net>

<net id="141"><net_src comp="22" pin="0"/><net_sink comp="138" pin=0"/></net>

<net id="148"><net_src comp="138" pin="1"/><net_sink comp="142" pin=0"/></net>

<net id="149"><net_src comp="142" pin="4"/><net_sink comp="138" pin=0"/></net>

<net id="153"><net_src comp="22" pin="0"/><net_sink comp="150" pin=0"/></net>

<net id="160"><net_src comp="150" pin="1"/><net_sink comp="154" pin=0"/></net>

<net id="164"><net_src comp="44" pin="0"/><net_sink comp="161" pin=0"/></net>

<net id="171"><net_src comp="161" pin="1"/><net_sink comp="165" pin=2"/></net>

<net id="175"><net_src comp="22" pin="0"/><net_sink comp="172" pin=0"/></net>

<net id="182"><net_src comp="172" pin="1"/><net_sink comp="176" pin=2"/></net>

<net id="183"><net_src comp="176" pin="4"/><net_sink comp="172" pin=0"/></net>

<net id="187"><net_src comp="184" pin="1"/><net_sink comp="110" pin=2"/></net>

<net id="194"><net_src comp="188" pin="4"/><net_sink comp="184" pin=0"/></net>

<net id="198"><net_src comp="44" pin="0"/><net_sink comp="195" pin=0"/></net>

<net id="205"><net_src comp="195" pin="1"/><net_sink comp="199" pin=0"/></net>

<net id="209"><net_src comp="206" pin="1"/><net_sink comp="188" pin=2"/></net>

<net id="218"><net_src comp="184" pin="1"/><net_sink comp="210" pin=0"/></net>

<net id="219"><net_src comp="184" pin="1"/><net_sink comp="210" pin=4"/></net>

<net id="220"><net_src comp="210" pin="6"/><net_sink comp="206" pin=0"/></net>

<net id="225"><net_src comp="184" pin="1"/><net_sink comp="221" pin=0"/></net>

<net id="234"><net_src comp="188" pin="4"/><net_sink comp="230" pin=0"/></net>

<net id="235"><net_src comp="54" pin="0"/><net_sink comp="230" pin=1"/></net>

<net id="243"><net_src comp="236" pin="2"/><net_sink comp="240" pin=0"/></net>

<net id="248"><net_src comp="0" pin="0"/><net_sink comp="244" pin=0"/></net>

<net id="249"><net_src comp="240" pin="1"/><net_sink comp="244" pin=1"/></net>

<net id="250"><net_src comp="244" pin="2"/><net_sink comp="110" pin=1"/></net>

<net id="255"><net_src comp="80" pin="2"/><net_sink comp="251" pin=0"/></net>

<net id="256"><net_src comp="86" pin="2"/><net_sink comp="251" pin=1"/></net>

<net id="263"><net_src comp="16" pin="0"/><net_sink comp="257" pin=0"/></net>

<net id="264"><net_src comp="104" pin="2"/><net_sink comp="257" pin=1"/></net>

<net id="265"><net_src comp="18" pin="0"/><net_sink comp="257" pin=2"/></net>

<net id="266"><net_src comp="20" pin="0"/><net_sink comp="257" pin=3"/></net>

<net id="273"><net_src comp="16" pin="0"/><net_sink comp="267" pin=0"/></net>

<net id="274"><net_src comp="98" pin="2"/><net_sink comp="267" pin=1"/></net>

<net id="275"><net_src comp="18" pin="0"/><net_sink comp="267" pin=2"/></net>

<net id="276"><net_src comp="20" pin="0"/><net_sink comp="267" pin=3"/></net>

<net id="281"><net_src comp="22" pin="0"/><net_sink comp="277" pin=1"/></net>

<net id="292"><net_src comp="282" pin="1"/><net_sink comp="288" pin=0"/></net>

<net id="297"><net_src comp="154" pin="4"/><net_sink comp="293" pin=0"/></net>

<net id="302"><net_src comp="142" pin="4"/><net_sink comp="298" pin=0"/></net>

<net id="306"><net_src comp="131" pin="4"/><net_sink comp="303" pin=0"/></net>

<net id="311"><net_src comp="303" pin="1"/><net_sink comp="307" pin=0"/></net>

<net id="316"><net_src comp="131" pin="4"/><net_sink comp="312" pin=0"/></net>

<net id="317"><net_src comp="46" pin="0"/><net_sink comp="312" pin=1"/></net>

<net id="322"><net_src comp="154" pin="4"/><net_sink comp="318" pin=0"/></net>

<net id="327"><net_src comp="176" pin="4"/><net_sink comp="323" pin=0"/></net>

<net id="331"><net_src comp="165" pin="4"/><net_sink comp="328" pin=0"/></net>

<net id="336"><net_src comp="328" pin="1"/><net_sink comp="332" pin=0"/></net>

<net id="341"><net_src comp="165" pin="4"/><net_sink comp="337" pin=0"/></net>

<net id="342"><net_src comp="46" pin="0"/><net_sink comp="337" pin=1"/></net>

<net id="347"><net_src comp="328" pin="1"/><net_sink comp="343" pin=1"/></net>

<net id="356"><net_src comp="0" pin="0"/><net_sink comp="352" pin=0"/></net>

<net id="357"><net_src comp="352" pin="2"/><net_sink comp="110" pin=1"/></net>

<net id="361"><net_src comp="199" pin="4"/><net_sink comp="358" pin=0"/></net>

<net id="366"><net_src comp="358" pin="1"/><net_sink comp="362" pin=0"/></net>

<net id="371"><net_src comp="199" pin="4"/><net_sink comp="367" pin=0"/></net>

<net id="372"><net_src comp="46" pin="0"/><net_sink comp="367" pin=1"/></net>

<net id="377"><net_src comp="138" pin="1"/><net_sink comp="373" pin=0"/></net>

<net id="378"><net_src comp="358" pin="1"/><net_sink comp="373" pin=1"/></net>

<net id="391"><net_src comp="0" pin="0"/><net_sink comp="387" pin=0"/></net>

<net id="392"><net_src comp="387" pin="2"/><net_sink comp="110" pin=1"/></net>

<net id="402"><net_src comp="56" pin="0"/><net_sink comp="396" pin=0"/></net>

<net id="403"><net_src comp="393" pin="1"/><net_sink comp="396" pin=1"/></net>

<net id="404"><net_src comp="58" pin="0"/><net_sink comp="396" pin=2"/></net>

<net id="405"><net_src comp="60" pin="0"/><net_sink comp="396" pin=3"/></net>

<net id="409"><net_src comp="393" pin="1"/><net_sink comp="406" pin=0"/></net>

<net id="414"><net_src comp="396" pin="4"/><net_sink comp="410" pin=0"/></net>

<net id="415"><net_src comp="62" pin="0"/><net_sink comp="410" pin=1"/></net>

<net id="420"><net_src comp="406" pin="1"/><net_sink comp="416" pin=0"/></net>

<net id="421"><net_src comp="64" pin="0"/><net_sink comp="416" pin=1"/></net>

<net id="430"><net_src comp="422" pin="2"/><net_sink comp="426" pin=0"/></net>

<net id="439"><net_src comp="172" pin="1"/><net_sink comp="435" pin=1"/></net>

<net id="444"><net_src comp="0" pin="0"/><net_sink comp="440" pin=0"/></net>

<net id="445"><net_src comp="440" pin="2"/><net_sink comp="110" pin=1"/></net>

<net id="455"><net_src comp="56" pin="0"/><net_sink comp="449" pin=0"/></net>

<net id="456"><net_src comp="446" pin="1"/><net_sink comp="449" pin=1"/></net>

<net id="457"><net_src comp="58" pin="0"/><net_sink comp="449" pin=2"/></net>

<net id="458"><net_src comp="60" pin="0"/><net_sink comp="449" pin=3"/></net>

<net id="462"><net_src comp="446" pin="1"/><net_sink comp="459" pin=0"/></net>

<net id="467"><net_src comp="449" pin="4"/><net_sink comp="463" pin=0"/></net>

<net id="468"><net_src comp="62" pin="0"/><net_sink comp="463" pin=1"/></net>

<net id="473"><net_src comp="459" pin="1"/><net_sink comp="469" pin=0"/></net>

<net id="474"><net_src comp="64" pin="0"/><net_sink comp="469" pin=1"/></net>

<net id="483"><net_src comp="475" pin="2"/><net_sink comp="479" pin=0"/></net>

<net id="487"><net_src comp="184" pin="1"/><net_sink comp="484" pin=0"/></net>

<net id="494"><net_src comp="56" pin="0"/><net_sink comp="488" pin=0"/></net>

<net id="495"><net_src comp="484" pin="1"/><net_sink comp="488" pin=1"/></net>

<net id="496"><net_src comp="58" pin="0"/><net_sink comp="488" pin=2"/></net>

<net id="497"><net_src comp="60" pin="0"/><net_sink comp="488" pin=3"/></net>

<net id="501"><net_src comp="484" pin="1"/><net_sink comp="498" pin=0"/></net>

<net id="506"><net_src comp="488" pin="4"/><net_sink comp="502" pin=0"/></net>

<net id="507"><net_src comp="62" pin="0"/><net_sink comp="502" pin=1"/></net>

<net id="512"><net_src comp="498" pin="1"/><net_sink comp="508" pin=0"/></net>

<net id="513"><net_src comp="64" pin="0"/><net_sink comp="508" pin=1"/></net>

<net id="522"><net_src comp="514" pin="2"/><net_sink comp="518" pin=0"/></net>

<net id="528"><net_src comp="518" pin="2"/><net_sink comp="523" pin=0"/></net>

<net id="529"><net_src comp="184" pin="1"/><net_sink comp="523" pin=1"/></net>

<net id="530"><net_src comp="54" pin="0"/><net_sink comp="523" pin=2"/></net>

<net id="534"><net_src comp="74" pin="2"/><net_sink comp="531" pin=0"/></net>

<net id="535"><net_src comp="531" pin="1"/><net_sink comp="277" pin=0"/></net>

<net id="539"><net_src comp="80" pin="2"/><net_sink comp="536" pin=0"/></net>

<net id="540"><net_src comp="536" pin="1"/><net_sink comp="251" pin=0"/></net>

<net id="541"><net_src comp="536" pin="1"/><net_sink comp="288" pin=1"/></net>

<net id="542"><net_src comp="536" pin="1"/><net_sink comp="293" pin=1"/></net>

<net id="543"><net_src comp="536" pin="1"/><net_sink comp="332" pin=1"/></net>

<net id="547"><net_src comp="86" pin="2"/><net_sink comp="544" pin=0"/></net>

<net id="548"><net_src comp="544" pin="1"/><net_sink comp="251" pin=1"/></net>

<net id="549"><net_src comp="544" pin="1"/><net_sink comp="298" pin=1"/></net>

<net id="550"><net_src comp="544" pin="1"/><net_sink comp="323" pin=1"/></net>

<net id="551"><net_src comp="544" pin="1"/><net_sink comp="362" pin=1"/></net>

<net id="555"><net_src comp="92" pin="2"/><net_sink comp="552" pin=0"/></net>

<net id="556"><net_src comp="552" pin="1"/><net_sink comp="307" pin=1"/></net>

<net id="560"><net_src comp="257" pin="4"/><net_sink comp="557" pin=0"/></net>

<net id="561"><net_src comp="557" pin="1"/><net_sink comp="282" pin=0"/></net>

<net id="565"><net_src comp="267" pin="4"/><net_sink comp="562" pin=0"/></net>

<net id="566"><net_src comp="562" pin="1"/><net_sink comp="285" pin=0"/></net>

<net id="570"><net_src comp="277" pin="2"/><net_sink comp="567" pin=0"/></net>

<net id="574"><net_src comp="251" pin="2"/><net_sink comp="571" pin=0"/></net>

<net id="575"><net_src comp="571" pin="1"/><net_sink comp="348" pin=1"/></net>

<net id="576"><net_src comp="571" pin="1"/><net_sink comp="379" pin=1"/></net>

<net id="580"><net_src comp="282" pin="1"/><net_sink comp="577" pin=0"/></net>

<net id="581"><net_src comp="577" pin="1"/><net_sink comp="343" pin=0"/></net>

<net id="582"><net_src comp="577" pin="1"/><net_sink comp="431" pin=0"/></net>

<net id="586"><net_src comp="285" pin="1"/><net_sink comp="583" pin=0"/></net>

<net id="587"><net_src comp="583" pin="1"/><net_sink comp="318" pin=1"/></net>

<net id="591"><net_src comp="288" pin="2"/><net_sink comp="588" pin=0"/></net>

<net id="592"><net_src comp="588" pin="1"/><net_sink comp="383" pin=1"/></net>

<net id="596"><net_src comp="293" pin="2"/><net_sink comp="593" pin=0"/></net>

<net id="597"><net_src comp="593" pin="1"/><net_sink comp="154" pin=2"/></net>

<net id="601"><net_src comp="298" pin="2"/><net_sink comp="598" pin=0"/></net>

<net id="602"><net_src comp="598" pin="1"/><net_sink comp="142" pin=2"/></net>

<net id="609"><net_src comp="312" pin="2"/><net_sink comp="606" pin=0"/></net>

<net id="610"><net_src comp="606" pin="1"/><net_sink comp="131" pin=2"/></net>

<net id="614"><net_src comp="318" pin="2"/><net_sink comp="611" pin=0"/></net>

<net id="615"><net_src comp="611" pin="1"/><net_sink comp="236" pin=1"/></net>

<net id="619"><net_src comp="323" pin="2"/><net_sink comp="616" pin=0"/></net>

<net id="620"><net_src comp="616" pin="1"/><net_sink comp="176" pin=0"/></net>

<net id="624"><net_src comp="328" pin="1"/><net_sink comp="621" pin=0"/></net>

<net id="625"><net_src comp="621" pin="1"/><net_sink comp="236" pin=0"/></net>

<net id="632"><net_src comp="337" pin="2"/><net_sink comp="629" pin=0"/></net>

<net id="633"><net_src comp="629" pin="1"/><net_sink comp="165" pin=0"/></net>

<net id="637"><net_src comp="343" pin="2"/><net_sink comp="634" pin=0"/></net>

<net id="638"><net_src comp="634" pin="1"/><net_sink comp="348" pin=0"/></net>

<net id="642"><net_src comp="348" pin="2"/><net_sink comp="639" pin=0"/></net>

<net id="643"><net_src comp="639" pin="1"/><net_sink comp="352" pin=1"/></net>

<net id="647"><net_src comp="352" pin="2"/><net_sink comp="644" pin=0"/></net>

<net id="648"><net_src comp="644" pin="1"/><net_sink comp="110" pin=1"/></net>

<net id="649"><net_src comp="644" pin="1"/><net_sink comp="117" pin=1"/></net>

<net id="653"><net_src comp="117" pin="2"/><net_sink comp="650" pin=0"/></net>

<net id="654"><net_src comp="650" pin="1"/><net_sink comp="188" pin=0"/></net>

<net id="658"><net_src comp="358" pin="1"/><net_sink comp="655" pin=0"/></net>

<net id="659"><net_src comp="655" pin="1"/><net_sink comp="431" pin=1"/></net>

<net id="666"><net_src comp="367" pin="2"/><net_sink comp="663" pin=0"/></net>

<net id="667"><net_src comp="663" pin="1"/><net_sink comp="199" pin=2"/></net>

<net id="671"><net_src comp="373" pin="2"/><net_sink comp="668" pin=0"/></net>

<net id="672"><net_src comp="668" pin="1"/><net_sink comp="379" pin=0"/></net>

<net id="676"><net_src comp="379" pin="2"/><net_sink comp="673" pin=0"/></net>

<net id="677"><net_src comp="673" pin="1"/><net_sink comp="383" pin=0"/></net>

<net id="681"><net_src comp="383" pin="2"/><net_sink comp="678" pin=0"/></net>

<net id="682"><net_src comp="678" pin="1"/><net_sink comp="387" pin=1"/></net>

<net id="686"><net_src comp="387" pin="2"/><net_sink comp="683" pin=0"/></net>

<net id="687"><net_src comp="683" pin="1"/><net_sink comp="110" pin=1"/></net>

<net id="688"><net_src comp="683" pin="1"/><net_sink comp="117" pin=1"/></net>

<net id="692"><net_src comp="117" pin="2"/><net_sink comp="689" pin=0"/></net>

<net id="693"><net_src comp="689" pin="1"/><net_sink comp="230" pin=0"/></net>

<net id="694"><net_src comp="689" pin="1"/><net_sink comp="393" pin=0"/></net>

<net id="695"><net_src comp="689" pin="1"/><net_sink comp="226" pin=0"/></net>

<net id="699"><net_src comp="410" pin="2"/><net_sink comp="696" pin=0"/></net>

<net id="700"><net_src comp="696" pin="1"/><net_sink comp="422" pin=1"/></net>

<net id="704"><net_src comp="416" pin="2"/><net_sink comp="701" pin=0"/></net>

<net id="705"><net_src comp="701" pin="1"/><net_sink comp="422" pin=0"/></net>

<net id="709"><net_src comp="230" pin="2"/><net_sink comp="706" pin=0"/></net>

<net id="710"><net_src comp="706" pin="1"/><net_sink comp="426" pin=1"/></net>

<net id="714"><net_src comp="426" pin="2"/><net_sink comp="711" pin=0"/></net>

<net id="718"><net_src comp="431" pin="2"/><net_sink comp="715" pin=0"/></net>

<net id="719"><net_src comp="715" pin="1"/><net_sink comp="435" pin=0"/></net>

<net id="723"><net_src comp="435" pin="2"/><net_sink comp="720" pin=0"/></net>

<net id="724"><net_src comp="720" pin="1"/><net_sink comp="440" pin=1"/></net>

<net id="728"><net_src comp="440" pin="2"/><net_sink comp="725" pin=0"/></net>

<net id="729"><net_src comp="725" pin="1"/><net_sink comp="110" pin=1"/></net>

<net id="730"><net_src comp="725" pin="1"/><net_sink comp="117" pin=1"/></net>

<net id="734"><net_src comp="117" pin="2"/><net_sink comp="731" pin=0"/></net>

<net id="735"><net_src comp="731" pin="1"/><net_sink comp="230" pin=0"/></net>

<net id="736"><net_src comp="731" pin="1"/><net_sink comp="446" pin=0"/></net>

<net id="737"><net_src comp="731" pin="1"/><net_sink comp="226" pin=1"/></net>

<net id="741"><net_src comp="463" pin="2"/><net_sink comp="738" pin=0"/></net>

<net id="742"><net_src comp="738" pin="1"/><net_sink comp="475" pin=1"/></net>

<net id="746"><net_src comp="469" pin="2"/><net_sink comp="743" pin=0"/></net>

<net id="747"><net_src comp="743" pin="1"/><net_sink comp="475" pin=0"/></net>

<net id="751"><net_src comp="230" pin="2"/><net_sink comp="748" pin=0"/></net>

<net id="752"><net_src comp="748" pin="1"/><net_sink comp="479" pin=1"/></net>

<net id="756"><net_src comp="479" pin="2"/><net_sink comp="753" pin=0"/></net>

<net id="760"><net_src comp="226" pin="2"/><net_sink comp="757" pin=0"/></net>

<net id="761"><net_src comp="757" pin="1"/><net_sink comp="221" pin=1"/></net>

<net id="765"><net_src comp="221" pin="2"/><net_sink comp="762" pin=0"/></net>

<net id="766"><net_src comp="762" pin="1"/><net_sink comp="210" pin=2"/></net>

<net id="770"><net_src comp="502" pin="2"/><net_sink comp="767" pin=0"/></net>

<net id="771"><net_src comp="767" pin="1"/><net_sink comp="514" pin=1"/></net>

<net id="775"><net_src comp="508" pin="2"/><net_sink comp="772" pin=0"/></net>

<net id="776"><net_src comp="772" pin="1"/><net_sink comp="514" pin=0"/></net>

<net id="780"><net_src comp="230" pin="2"/><net_sink comp="777" pin=0"/></net>

<net id="781"><net_src comp="777" pin="1"/><net_sink comp="518" pin=1"/></net>

<net id="785"><net_src comp="523" pin="3"/><net_sink comp="782" pin=0"/></net>

<net id="786"><net_src comp="782" pin="1"/><net_sink comp="110" pin=2"/></net>

<net id="790"><net_src comp="244" pin="2"/><net_sink comp="787" pin=0"/></net>

<net id="791"><net_src comp="787" pin="1"/><net_sink comp="110" pin=1"/></net>

<net id="795"><net_src comp="244" pin="2"/><net_sink comp="792" pin=0"/></net>

<net id="796"><net_src comp="792" pin="1"/><net_sink comp="110" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: mem | {76 77 78 79 80 81 82 83 84 85 86 87 88 89 }
 - Input state : 
	Port: fc_layer : mem | {11 12 13 14 15 16 17 18 23 24 25 26 27 28 29 30 38 39 40 41 42 43 44 45 }
	Port: fc_layer : input_offset | {1 }
	Port: fc_layer : output_offset | {1 }
	Port: fc_layer : batch_size | {1 }
	Port: fc_layer : num_inputs | {1 }
	Port: fc_layer : num_outputs | {1 }
	Port: fc_layer : enable_relu | {1 }
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
		tmp2 : 1
	State 8
		next_mul4 : 1
		next_mul2 : 1
		b_cast : 1
		tmp_3 : 2
		b_1 : 1
		StgValue_134 : 3
		tmp_6 : 1
	State 9
		next_mul : 1
		o_cast : 1
		tmp_7 : 2
		o_1 : 1
		StgValue_144 : 3
		tmp1 : 2
	State 10
	State 11
		output_element_req : 1
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
		i_cast : 1
		tmp_5 : 2
		i_1 : 1
		StgValue_163 : 3
		tmp4 : 2
		tmp_29 : 1
	State 21
	State 22
	State 23
		input_element_req : 1
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
		tmp_11 : 1
		tmp_12 : 1
		notlhs8 : 2
		notrhs9 : 2
	State 35
	State 36
	State 37
	State 38
		weight_element_req : 1
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
		tmp_17 : 1
		tmp_18 : 1
		notlhs1 : 2
		notrhs1 : 2
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
		tmp_8_be : 1
	State 73
	State 74
	State 75
		tmp_26 : 1
		tmp_27 : 1
		notlhs : 2
		notrhs : 2
	State 76
		mem_addr_4_req : 1
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
		mem_addr_3_req : 1
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|-------------------------------|---------|---------|---------|
| Operation|        Functional Unit        |  DSP48E |    FF   |   LUT   |
|----------|-------------------------------|---------|---------|---------|
|          |           grp_fu_236          |    0    |   101   |    37   |
|          |          tmp2_fu_288          |    0    |   101   |    37   |
|          |        next_mul4_fu_293       |    0    |   101   |    37   |
|          |        next_mul2_fu_298       |    0    |   101   |    37   |
|          |           b_1_fu_312          |    0    |    98   |    36   |
|          |          tmp_6_fu_318         |    0    |   101   |    37   |
|          |        next_mul_fu_323        |    0    |   101   |    37   |
|    add   |           o_1_fu_337          |    0    |    98   |    36   |
|          |          tmp1_fu_343          |    0    |    98   |    36   |
|          |          tmp_9_fu_348         |    0    |   101   |    37   |
|          |           i_1_fu_367          |    0    |    98   |    36   |
|          |          tmp4_fu_373          |    0    |   101   |    37   |
|          |          tmp3_fu_379          |    0    |   101   |    37   |
|          |         tmp_10_fu_383         |    0    |   101   |    37   |
|          |          tmp5_fu_431          |    0    |    98   |    36   |
|          |         tmp_16_fu_435         |    0    |   101   |    37   |
|----------|-------------------------------|---------|---------|---------|
|   fadd   |           grp_fu_221          |    2    |   422   |   243   |
|----------|-------------------------------|---------|---------|---------|
|   fmul   |           grp_fu_226          |    3    |   199   |   138   |
|----------|-------------------------------|---------|---------|---------|
|    mul   |           grp_fu_251          |    4    |   247   |    19   |
|----------|-------------------------------|---------|---------|---------|
|   fcmp   |           grp_fu_230          |    0    |    75   |    66   |
|----------|-------------------------------|---------|---------|---------|
|          |          tmp_1_fu_277         |    0    |    0    |    16   |
|          |          tmp_3_fu_307         |    0    |    0    |    16   |
|          |          tmp_7_fu_332         |    0    |    0    |    16   |
|          |          tmp_5_fu_362         |    0    |    0    |    16   |
|   icmp   |         notlhs8_fu_410        |    0    |    0    |    4    |
|          |         notrhs9_fu_416        |    0    |    0    |    13   |
|          |         notlhs1_fu_463        |    0    |    0    |    4    |
|          |         notrhs1_fu_469        |    0    |    0    |    13   |
|          |         notlhs_fu_502         |    0    |    0    |    4    |
|          |         notrhs_fu_508         |    0    |    0    |    13   |
|----------|-------------------------------|---------|---------|---------|
|  select  |         tmp_22_fu_523         |    0    |    0    |    32   |
|----------|-------------------------------|---------|---------|---------|
|          |         tmp_13_fu_422         |    0    |    0    |    2    |
|    or    |         tmp_19_fu_475         |    0    |    0    |    2    |
|          |         tmp_28_fu_514         |    0    |    0    |    2    |
|----------|-------------------------------|---------|---------|---------|
|          |         tmp_15_fu_426         |    0    |    0    |    2    |
|    and   |         tmp_25_fu_479         |    0    |    0    |    2    |
|          |         tmp_30_fu_518         |    0    |    0    |    2    |
|----------|-------------------------------|---------|---------|---------|
|          |  enable_relu_read_read_fu_74  |    0    |    0    |    0    |
|          |  num_outputs_read_read_fu_80  |    0    |    0    |    0    |
|          |   num_inputs_read_read_fu_86  |    0    |    0    |    0    |
|   read   |   batch_size_read_read_fu_92  |    0    |    0    |    0    |
|          | output_offset_read_read_fu_98 |    0    |    0    |    0    |
|          | input_offset_read_read_fu_104 |    0    |    0    |    0    |
|          |        grp_read_fu_117        |    0    |    0    |    0    |
|----------|-------------------------------|---------|---------|---------|
| writeresp|      grp_writeresp_fu_110     |    0    |    0    |    0    |
|----------|-------------------------------|---------|---------|---------|
|          |           tmp_fu_257          |    0    |    0    |    0    |
|          |          tmp_2_fu_267         |    0    |    0    |    0    |
|partselect|         tmp_11_fu_396         |    0    |    0    |    0    |
|          |         tmp_17_fu_449         |    0    |    0    |    0    |
|          |         tmp_26_fu_488         |    0    |    0    |    0    |
|----------|-------------------------------|---------|---------|---------|
|          |          tmp_s_fu_282         |    0    |    0    |    0    |
|          |          tmp_4_fu_285         |    0    |    0    |    0    |
|   zext   |         b_cast_fu_303         |    0    |    0    |    0    |
|          |         o_cast_fu_328         |    0    |    0    |    0    |
|          |         i_cast_fu_358         |    0    |    0    |    0    |
|----------|-------------------------------|---------|---------|---------|
|          |         tmp_12_fu_406         |    0    |    0    |    0    |
|   trunc  |         tmp_18_fu_459         |    0    |    0    |    0    |
|          |         tmp_27_fu_498         |    0    |    0    |    0    |
|----------|-------------------------------|---------|---------|---------|
|   Total  |                               |    9    |   2544  |   1212  |
|----------|-------------------------------|---------|---------|---------|

Memories:
N/A

* Register list:
+------------------------+--------+
|                        |   FF   |
+------------------------+--------+
|       b_1_reg_606      |   31   |
|        b_reg_127       |   31   |
| batch_size_read_reg_552|   32   |
|enable_relu_read_reg_531|   32   |
|       i_1_reg_663      |   31   |
|     i_cast_reg_655     |   32   |
|        i_reg_195       |   31   |
|  input_element_reg_689 |   32   |
|   mem_addr_1_reg_683   |   32   |
|   mem_addr_2_reg_725   |   32   |
|   mem_addr_3_reg_792   |   32   |
|   mem_addr_4_reg_787   |   32   |
|    mem_addr_reg_644    |   32   |
|    next_mul2_reg_598   |   32   |
|    next_mul4_reg_593   |   32   |
|    next_mul_reg_616    |   32   |
|     notlhs1_reg_738    |    1   |
|     notlhs8_reg_696    |    1   |
|     notlhs_reg_767     |    1   |
|     notrhs1_reg_743    |    1   |
|     notrhs9_reg_701    |    1   |
|     notrhs_reg_772     |    1   |
| num_inputs_read_reg_544|   32   |
|num_outputs_read_reg_536|   32   |
|   num_weights_reg_571  |   32   |
|       o_1_reg_629      |   31   |
|     o_cast_reg_621     |   32   |
|        o_reg_161       |   31   |
|output_element_1_reg_762|   32   |
| output_element_reg_650 |   32   |
|    phi_mul1_reg_138    |   32   |
|    phi_mul3_reg_150    |   32   |
|     phi_mul_reg_172    |   32   |
|         reg_240        |   32   |
|      tmp1_reg_634      |   32   |
|      tmp2_reg_588      |   32   |
|      tmp3_reg_673      |   32   |
|      tmp4_reg_668      |   32   |
|      tmp5_reg_715      |   32   |
|     tmp_10_reg_678     |   32   |
|     tmp_14_reg_706     |    1   |
|     tmp_15_reg_711     |    1   |
|     tmp_16_reg_720     |   32   |
|      tmp_1_reg_567     |    1   |
|     tmp_21_reg_748     |    1   |
|     tmp_22_reg_782     |   32   |
|     tmp_24_reg_757     |   32   |
|     tmp_25_reg_753     |    1   |
|     tmp_29_reg_777     |    1   |
|      tmp_2_reg_562     |   30   |
|      tmp_4_reg_583     |   32   |
|      tmp_6_reg_611     |   32   |
|    tmp_8_be_reg_206    |   32   |
|      tmp_8_reg_184     |   32   |
|      tmp_9_reg_639     |   32   |
|       tmp_reg_557      |   30   |
|      tmp_s_reg_577     |   32   |
| weight_element_reg_731 |   32   |
+------------------------+--------+
|          Total         |  1474  |
+------------------------+--------+

* Multiplexer (MUX) list: 
|----------------------|------|------|------|--------||---------||---------|
|         Comp         |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|----------------------|------|------|------|--------||---------||---------|
| grp_writeresp_fu_110 |  p0  |   4  |   1  |    4   ||    9    |
| grp_writeresp_fu_110 |  p1  |   9  |  32  |   288  ||    44   |
| grp_writeresp_fu_110 |  p2  |   3  |  32  |   96   ||    15   |
|    grp_read_fu_117   |  p1  |   3  |  32  |   96   ||    15   |
|   phi_mul1_reg_138   |  p0  |   2  |  32  |   64   ||    9    |
|    phi_mul_reg_172   |  p0  |   2  |  32  |   64   ||    9    |
|      grp_fu_230      |  p0  |   3  |  32  |   96   ||    15   |
|      grp_fu_251      |  p0  |   2  |  32  |   64   ||    9    |
|      grp_fu_251      |  p1  |   2  |  32  |   64   ||    9    |
|----------------------|------|------|------|--------||---------||---------|
|         Total        |      |      |      |   836  || 16.0263 ||   134   |
|----------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           | DSP48E |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |    9   |    -   |  2544  |  1212  |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |   16   |    -   |   134  |
|  Register |    -   |    -   |  1474  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |    9   |   16   |  4018  |  1346  |
+-----------+--------+--------+--------+--------+
