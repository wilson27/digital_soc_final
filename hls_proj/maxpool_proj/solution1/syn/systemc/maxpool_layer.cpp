// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "maxpool_layer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic maxpool_layer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic maxpool_layer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<51> maxpool_layer::ap_ST_fsm_state1 = "1";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state2 = "10";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state3 = "100";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state4 = "1000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state5 = "10000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state6 = "100000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state7 = "1000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state8 = "10000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state9 = "100000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state10 = "1000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state11 = "10000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state12 = "100000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<51> maxpool_layer::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<32> maxpool_layer::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> maxpool_layer::ap_const_lv32_1D = "11101";
const sc_lv<32> maxpool_layer::ap_const_lv32_24 = "100100";
const sc_lv<32> maxpool_layer::ap_const_lv32_2C = "101100";
const sc_lv<32> maxpool_layer::ap_const_lv32_2D = "101101";
const sc_lv<32> maxpool_layer::ap_const_lv32_32 = "110010";
const int maxpool_layer::C_S_AXI_DATA_WIDTH = "100000";
const int maxpool_layer::C_M_AXI_MEM_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int maxpool_layer::C_M_AXI_MEM_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int maxpool_layer::C_M_AXI_MEM_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int maxpool_layer::C_M_AXI_MEM_CACHE_VALUE = "11";
const int maxpool_layer::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> maxpool_layer::ap_const_lv32_1 = "1";
const sc_lv<32> maxpool_layer::ap_const_lv32_2 = "10";
const sc_lv<1> maxpool_layer::ap_const_lv1_1 = "1";
const sc_lv<32> maxpool_layer::ap_const_lv32_9 = "1001";
const sc_lv<32> maxpool_layer::ap_const_lv32_A = "1010";
const sc_lv<32> maxpool_layer::ap_const_lv32_11 = "10001";
const sc_lv<32> maxpool_layer::ap_const_lv32_12 = "10010";
const sc_lv<32> maxpool_layer::ap_const_lv32_13 = "10011";
const sc_lv<1> maxpool_layer::ap_const_lv1_0 = "0";
const sc_lv<32> maxpool_layer::ap_const_lv32_1A = "11010";
const sc_lv<32> maxpool_layer::ap_const_lv32_1B = "11011";
const sc_lv<32> maxpool_layer::ap_const_lv32_1C = "11100";
const sc_lv<32> maxpool_layer::ap_const_lv32_28 = "101000";
const sc_lv<32> maxpool_layer::ap_const_lv32_29 = "101001";
const sc_lv<32> maxpool_layer::ap_const_lv32_2A = "101010";
const sc_lv<32> maxpool_layer::ap_const_lv32_2B = "101011";
const sc_lv<31> maxpool_layer::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> maxpool_layer::ap_const_lv32_C60CA000 = "11000110000011001010000000000000";
const sc_lv<3> maxpool_layer::ap_const_lv3_0 = "000";
const sc_lv<2> maxpool_layer::ap_const_lv2_0 = "00";
const sc_lv<4> maxpool_layer::ap_const_lv4_0 = "0000";
const sc_lv<4> maxpool_layer::ap_const_lv4_F = "1111";
const sc_lv<32> maxpool_layer::ap_const_lv32_25 = "100101";
const sc_lv<32> maxpool_layer::ap_const_lv32_1F = "11111";
const sc_lv<31> maxpool_layer::ap_const_lv31_1 = "1";
const sc_lv<32> maxpool_layer::ap_const_lv32_3 = "11";
const sc_lv<32> maxpool_layer::ap_const_lv32_B = "1011";
const sc_lv<32> maxpool_layer::ap_const_lv32_14 = "10100";
const sc_lv<32> maxpool_layer::ap_const_lv32_17 = "10111";
const sc_lv<32> maxpool_layer::ap_const_lv32_1E = "11110";
const sc_lv<8> maxpool_layer::ap_const_lv8_FF = "11111111";
const sc_lv<23> maxpool_layer::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> maxpool_layer::ap_const_lv5_4 = "100";
const bool maxpool_layer::ap_const_boolean_1 = true;

maxpool_layer::maxpool_layer(sc_module_name name) : sc_module(name), mVcdFile(0) {
    maxpool_layer_CTRL_BUS_s_axi_U = new maxpool_layer_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>("maxpool_layer_CTRL_BUS_s_axi_U");
    maxpool_layer_CTRL_BUS_s_axi_U->AWVALID(s_axi_CTRL_BUS_AWVALID);
    maxpool_layer_CTRL_BUS_s_axi_U->AWREADY(s_axi_CTRL_BUS_AWREADY);
    maxpool_layer_CTRL_BUS_s_axi_U->AWADDR(s_axi_CTRL_BUS_AWADDR);
    maxpool_layer_CTRL_BUS_s_axi_U->WVALID(s_axi_CTRL_BUS_WVALID);
    maxpool_layer_CTRL_BUS_s_axi_U->WREADY(s_axi_CTRL_BUS_WREADY);
    maxpool_layer_CTRL_BUS_s_axi_U->WDATA(s_axi_CTRL_BUS_WDATA);
    maxpool_layer_CTRL_BUS_s_axi_U->WSTRB(s_axi_CTRL_BUS_WSTRB);
    maxpool_layer_CTRL_BUS_s_axi_U->ARVALID(s_axi_CTRL_BUS_ARVALID);
    maxpool_layer_CTRL_BUS_s_axi_U->ARREADY(s_axi_CTRL_BUS_ARREADY);
    maxpool_layer_CTRL_BUS_s_axi_U->ARADDR(s_axi_CTRL_BUS_ARADDR);
    maxpool_layer_CTRL_BUS_s_axi_U->RVALID(s_axi_CTRL_BUS_RVALID);
    maxpool_layer_CTRL_BUS_s_axi_U->RREADY(s_axi_CTRL_BUS_RREADY);
    maxpool_layer_CTRL_BUS_s_axi_U->RDATA(s_axi_CTRL_BUS_RDATA);
    maxpool_layer_CTRL_BUS_s_axi_U->RRESP(s_axi_CTRL_BUS_RRESP);
    maxpool_layer_CTRL_BUS_s_axi_U->BVALID(s_axi_CTRL_BUS_BVALID);
    maxpool_layer_CTRL_BUS_s_axi_U->BREADY(s_axi_CTRL_BUS_BREADY);
    maxpool_layer_CTRL_BUS_s_axi_U->BRESP(s_axi_CTRL_BUS_BRESP);
    maxpool_layer_CTRL_BUS_s_axi_U->ACLK(ap_clk);
    maxpool_layer_CTRL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    maxpool_layer_CTRL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    maxpool_layer_CTRL_BUS_s_axi_U->ap_start(ap_start);
    maxpool_layer_CTRL_BUS_s_axi_U->interrupt(interrupt);
    maxpool_layer_CTRL_BUS_s_axi_U->ap_ready(ap_ready);
    maxpool_layer_CTRL_BUS_s_axi_U->ap_done(ap_done);
    maxpool_layer_CTRL_BUS_s_axi_U->ap_idle(ap_idle);
    maxpool_layer_CTRL_BUS_s_axi_U->input_offset(input_offset);
    maxpool_layer_CTRL_BUS_s_axi_U->output_offset(output_offset);
    maxpool_layer_CTRL_BUS_s_axi_U->b(b);
    maxpool_layer_CTRL_BUS_s_axi_U->od(od);
    maxpool_layer_CTRL_BUS_s_axi_U->ox(ox);
    maxpool_layer_CTRL_BUS_s_axi_U->oy(oy);
    maxpool_layer_CTRL_BUS_s_axi_U->id(id);
    maxpool_layer_CTRL_BUS_s_axi_U->ix(ix);
    maxpool_layer_CTRL_BUS_s_axi_U->iy(iy);
    maxpool_layer_CTRL_BUS_s_axi_U->s(s);
    maxpool_layer_CTRL_BUS_s_axi_U->k(k);
    maxpool_layer_mem_m_axi_U = new maxpool_layer_mem_m_axi<32,32,5,16,16,16,16,C_M_AXI_MEM_ID_WIDTH,C_M_AXI_MEM_ADDR_WIDTH,C_M_AXI_MEM_DATA_WIDTH,C_M_AXI_MEM_AWUSER_WIDTH,C_M_AXI_MEM_ARUSER_WIDTH,C_M_AXI_MEM_WUSER_WIDTH,C_M_AXI_MEM_RUSER_WIDTH,C_M_AXI_MEM_BUSER_WIDTH,C_M_AXI_MEM_TARGET_ADDR,C_M_AXI_MEM_USER_VALUE,C_M_AXI_MEM_PROT_VALUE,C_M_AXI_MEM_CACHE_VALUE>("maxpool_layer_mem_m_axi_U");
    maxpool_layer_mem_m_axi_U->AWVALID(m_axi_mem_AWVALID);
    maxpool_layer_mem_m_axi_U->AWREADY(m_axi_mem_AWREADY);
    maxpool_layer_mem_m_axi_U->AWADDR(m_axi_mem_AWADDR);
    maxpool_layer_mem_m_axi_U->AWID(m_axi_mem_AWID);
    maxpool_layer_mem_m_axi_U->AWLEN(m_axi_mem_AWLEN);
    maxpool_layer_mem_m_axi_U->AWSIZE(m_axi_mem_AWSIZE);
    maxpool_layer_mem_m_axi_U->AWBURST(m_axi_mem_AWBURST);
    maxpool_layer_mem_m_axi_U->AWLOCK(m_axi_mem_AWLOCK);
    maxpool_layer_mem_m_axi_U->AWCACHE(m_axi_mem_AWCACHE);
    maxpool_layer_mem_m_axi_U->AWPROT(m_axi_mem_AWPROT);
    maxpool_layer_mem_m_axi_U->AWQOS(m_axi_mem_AWQOS);
    maxpool_layer_mem_m_axi_U->AWREGION(m_axi_mem_AWREGION);
    maxpool_layer_mem_m_axi_U->AWUSER(m_axi_mem_AWUSER);
    maxpool_layer_mem_m_axi_U->WVALID(m_axi_mem_WVALID);
    maxpool_layer_mem_m_axi_U->WREADY(m_axi_mem_WREADY);
    maxpool_layer_mem_m_axi_U->WDATA(m_axi_mem_WDATA);
    maxpool_layer_mem_m_axi_U->WSTRB(m_axi_mem_WSTRB);
    maxpool_layer_mem_m_axi_U->WLAST(m_axi_mem_WLAST);
    maxpool_layer_mem_m_axi_U->WID(m_axi_mem_WID);
    maxpool_layer_mem_m_axi_U->WUSER(m_axi_mem_WUSER);
    maxpool_layer_mem_m_axi_U->ARVALID(m_axi_mem_ARVALID);
    maxpool_layer_mem_m_axi_U->ARREADY(m_axi_mem_ARREADY);
    maxpool_layer_mem_m_axi_U->ARADDR(m_axi_mem_ARADDR);
    maxpool_layer_mem_m_axi_U->ARID(m_axi_mem_ARID);
    maxpool_layer_mem_m_axi_U->ARLEN(m_axi_mem_ARLEN);
    maxpool_layer_mem_m_axi_U->ARSIZE(m_axi_mem_ARSIZE);
    maxpool_layer_mem_m_axi_U->ARBURST(m_axi_mem_ARBURST);
    maxpool_layer_mem_m_axi_U->ARLOCK(m_axi_mem_ARLOCK);
    maxpool_layer_mem_m_axi_U->ARCACHE(m_axi_mem_ARCACHE);
    maxpool_layer_mem_m_axi_U->ARPROT(m_axi_mem_ARPROT);
    maxpool_layer_mem_m_axi_U->ARQOS(m_axi_mem_ARQOS);
    maxpool_layer_mem_m_axi_U->ARREGION(m_axi_mem_ARREGION);
    maxpool_layer_mem_m_axi_U->ARUSER(m_axi_mem_ARUSER);
    maxpool_layer_mem_m_axi_U->RVALID(m_axi_mem_RVALID);
    maxpool_layer_mem_m_axi_U->RREADY(m_axi_mem_RREADY);
    maxpool_layer_mem_m_axi_U->RDATA(m_axi_mem_RDATA);
    maxpool_layer_mem_m_axi_U->RLAST(m_axi_mem_RLAST);
    maxpool_layer_mem_m_axi_U->RID(m_axi_mem_RID);
    maxpool_layer_mem_m_axi_U->RUSER(m_axi_mem_RUSER);
    maxpool_layer_mem_m_axi_U->RRESP(m_axi_mem_RRESP);
    maxpool_layer_mem_m_axi_U->BVALID(m_axi_mem_BVALID);
    maxpool_layer_mem_m_axi_U->BREADY(m_axi_mem_BREADY);
    maxpool_layer_mem_m_axi_U->BRESP(m_axi_mem_BRESP);
    maxpool_layer_mem_m_axi_U->BID(m_axi_mem_BID);
    maxpool_layer_mem_m_axi_U->BUSER(m_axi_mem_BUSER);
    maxpool_layer_mem_m_axi_U->ACLK(ap_clk);
    maxpool_layer_mem_m_axi_U->ARESET(ap_rst_n_inv);
    maxpool_layer_mem_m_axi_U->ACLK_EN(ap_var_for_const0);
    maxpool_layer_mem_m_axi_U->I_ARVALID(mem_ARVALID);
    maxpool_layer_mem_m_axi_U->I_ARREADY(mem_ARREADY);
    maxpool_layer_mem_m_axi_U->I_ARADDR(tmp_14_reg_794);
    maxpool_layer_mem_m_axi_U->I_ARID(ap_var_for_const1);
    maxpool_layer_mem_m_axi_U->I_ARLEN(ap_var_for_const2);
    maxpool_layer_mem_m_axi_U->I_ARSIZE(ap_var_for_const3);
    maxpool_layer_mem_m_axi_U->I_ARLOCK(ap_var_for_const4);
    maxpool_layer_mem_m_axi_U->I_ARCACHE(ap_var_for_const5);
    maxpool_layer_mem_m_axi_U->I_ARQOS(ap_var_for_const5);
    maxpool_layer_mem_m_axi_U->I_ARPROT(ap_var_for_const3);
    maxpool_layer_mem_m_axi_U->I_ARUSER(ap_var_for_const1);
    maxpool_layer_mem_m_axi_U->I_ARBURST(ap_var_for_const4);
    maxpool_layer_mem_m_axi_U->I_ARREGION(ap_var_for_const5);
    maxpool_layer_mem_m_axi_U->I_RVALID(mem_RVALID);
    maxpool_layer_mem_m_axi_U->I_RREADY(mem_RREADY);
    maxpool_layer_mem_m_axi_U->I_RDATA(mem_RDATA);
    maxpool_layer_mem_m_axi_U->I_RID(mem_RID);
    maxpool_layer_mem_m_axi_U->I_RUSER(mem_RUSER);
    maxpool_layer_mem_m_axi_U->I_RRESP(mem_RRESP);
    maxpool_layer_mem_m_axi_U->I_RLAST(mem_RLAST);
    maxpool_layer_mem_m_axi_U->I_AWVALID(mem_AWVALID);
    maxpool_layer_mem_m_axi_U->I_AWREADY(mem_AWREADY);
    maxpool_layer_mem_m_axi_U->I_AWADDR(tmp_11_reg_847);
    maxpool_layer_mem_m_axi_U->I_AWID(ap_var_for_const1);
    maxpool_layer_mem_m_axi_U->I_AWLEN(ap_var_for_const2);
    maxpool_layer_mem_m_axi_U->I_AWSIZE(ap_var_for_const3);
    maxpool_layer_mem_m_axi_U->I_AWLOCK(ap_var_for_const4);
    maxpool_layer_mem_m_axi_U->I_AWCACHE(ap_var_for_const5);
    maxpool_layer_mem_m_axi_U->I_AWQOS(ap_var_for_const5);
    maxpool_layer_mem_m_axi_U->I_AWPROT(ap_var_for_const3);
    maxpool_layer_mem_m_axi_U->I_AWUSER(ap_var_for_const1);
    maxpool_layer_mem_m_axi_U->I_AWBURST(ap_var_for_const4);
    maxpool_layer_mem_m_axi_U->I_AWREGION(ap_var_for_const5);
    maxpool_layer_mem_m_axi_U->I_WVALID(mem_WVALID);
    maxpool_layer_mem_m_axi_U->I_WREADY(mem_WREADY);
    maxpool_layer_mem_m_axi_U->I_WDATA(tmp_8_reg_259);
    maxpool_layer_mem_m_axi_U->I_WID(ap_var_for_const1);
    maxpool_layer_mem_m_axi_U->I_WUSER(ap_var_for_const1);
    maxpool_layer_mem_m_axi_U->I_WLAST(ap_var_for_const6);
    maxpool_layer_mem_m_axi_U->I_WSTRB(ap_var_for_const7);
    maxpool_layer_mem_m_axi_U->I_BVALID(mem_BVALID);
    maxpool_layer_mem_m_axi_U->I_BREADY(mem_BREADY);
    maxpool_layer_mem_m_axi_U->I_BRESP(mem_BRESP);
    maxpool_layer_mem_m_axi_U->I_BID(mem_BID);
    maxpool_layer_mem_m_axi_U->I_BUSER(mem_BUSER);
    maxpool_layer_fcmbkb_U0 = new maxpool_layer_fcmbkb<1,4,32,32,1>("maxpool_layer_fcmbkb_U0");
    maxpool_layer_fcmbkb_U0->clk(ap_clk);
    maxpool_layer_fcmbkb_U0->reset(ap_rst_n_inv);
    maxpool_layer_fcmbkb_U0->din0(temp_reg_805);
    maxpool_layer_fcmbkb_U0->din1(tmp_12_reg_283);
    maxpool_layer_fcmbkb_U0->ce(ap_var_for_const0);
    maxpool_layer_fcmbkb_U0->opcode(ap_var_for_const8);
    maxpool_layer_fcmbkb_U0->dout(grp_fu_305_p2);
    maxpool_layer_mulcud_U1 = new maxpool_layer_mulcud<1,7,32,32,32>("maxpool_layer_mulcud_U1");
    maxpool_layer_mulcud_U1->clk(ap_clk);
    maxpool_layer_mulcud_U1->reset(ap_rst_n_inv);
    maxpool_layer_mulcud_U1->din0(tmp4_reg_687);
    maxpool_layer_mulcud_U1->din1(iy_read_reg_613);
    maxpool_layer_mulcud_U1->ce(ap_var_for_const0);
    maxpool_layer_mulcud_U1->dout(grp_fu_390_p2);
    maxpool_layer_mulcud_U2 = new maxpool_layer_mulcud<1,7,32,32,32>("maxpool_layer_mulcud_U2");
    maxpool_layer_mulcud_U2->clk(ap_clk);
    maxpool_layer_mulcud_U2->reset(ap_rst_n_inv);
    maxpool_layer_mulcud_U2->din0(tmp9_reg_692);
    maxpool_layer_mulcud_U2->din1(oy_read_reg_628);
    maxpool_layer_mulcud_U2->ce(ap_var_for_const0);
    maxpool_layer_mulcud_U2->dout(grp_fu_394_p2);
    maxpool_layer_mulcud_U3 = new maxpool_layer_mulcud<1,7,32,32,32>("maxpool_layer_mulcud_U3");
    maxpool_layer_mulcud_U3->clk(ap_clk);
    maxpool_layer_mulcud_U3->reset(ap_rst_n_inv);
    maxpool_layer_mulcud_U3->din0(tmp8_reg_720);
    maxpool_layer_mulcud_U3->din1(ox_read_reg_634);
    maxpool_layer_mulcud_U3->ce(ap_var_for_const0);
    maxpool_layer_mulcud_U3->dout(grp_fu_423_p2);
    maxpool_layer_mulcud_U4 = new maxpool_layer_mulcud<1,7,32,32,32>("maxpool_layer_mulcud_U4");
    maxpool_layer_mulcud_U4->clk(ap_clk);
    maxpool_layer_mulcud_U4->reset(ap_rst_n_inv);
    maxpool_layer_mulcud_U4->din0(tmp3_reg_761);
    maxpool_layer_mulcud_U4->din1(ix_read_reg_618);
    maxpool_layer_mulcud_U4->ce(ap_var_for_const0);
    maxpool_layer_mulcud_U4->dout(grp_fu_471_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_2_fu_352_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_2_fu_352_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_mem_ARREADY);
    sensitive << ( mem_ARREADY );
    sensitive << ( ap_reg_ioackin_mem_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_mem_AWREADY);
    sensitive << ( mem_AWREADY );
    sensitive << ( ap_reg_ioackin_mem_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_mem_WREADY);
    sensitive << ( mem_WREADY );
    sensitive << ( ap_reg_ioackin_mem_WREADY );

    SC_METHOD(thread_b_1_fu_357_p2);
    sensitive << ( b_s_reg_167 );

    SC_METHOD(thread_b_cast_fu_348_p1);
    sensitive << ( b_s_reg_167 );

    SC_METHOD(thread_i_d_cast_fu_363_p1);
    sensitive << ( i_d_reg_202 );

    SC_METHOD(thread_i_x_1_fu_485_p2);
    sensitive << ( i_x1_reg_295 );

    SC_METHOD(thread_i_y_1_fu_491_p2);
    sensitive << ( i_y1_reg_272 );

    SC_METHOD(thread_mem_ARVALID);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_reg_ioackin_mem_ARREADY );

    SC_METHOD(thread_mem_AWVALID);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_reg_ioackin_mem_AWREADY );

    SC_METHOD(thread_mem_BREADY);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( mem_BVALID );

    SC_METHOD(thread_mem_RREADY);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( mem_RVALID );

    SC_METHOD(thread_mem_WVALID);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_reg_ioackin_mem_WREADY );

    SC_METHOD(thread_mem_blk_n_AR);
    sensitive << ( m_axi_mem_ARREADY );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_mem_blk_n_AW);
    sensitive << ( m_axi_mem_AWREADY );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_mem_blk_n_B);
    sensitive << ( m_axi_mem_BVALID );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_mem_blk_n_R);
    sensitive << ( m_axi_mem_RVALID );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_mem_blk_n_W);
    sensitive << ( m_axi_mem_WREADY );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_next_mul2_fu_398_p2);
    sensitive << ( s_read_reg_607 );
    sensitive << ( i_y_reg_224 );

    SC_METHOD(thread_next_mul4_fu_343_p2);
    sensitive << ( id_read_reg_623 );
    sensitive << ( phi_mul3_reg_178 );

    SC_METHOD(thread_next_mul6_fu_338_p2);
    sensitive << ( od_read_reg_640 );
    sensitive << ( phi_mul5_reg_190 );

    SC_METHOD(thread_next_mul_fu_432_p2);
    sensitive << ( s_read_reg_607 );
    sensitive << ( i_x_reg_247 );

    SC_METHOD(thread_notlhs1_fu_554_p2);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( tmp_17_fu_528_p4 );

    SC_METHOD(thread_notlhs_fu_542_p2);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( tmp_15_fu_510_p4 );

    SC_METHOD(thread_notrhs1_fu_560_p2);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( tmp_18_fu_538_p1 );

    SC_METHOD(thread_notrhs_fu_548_p2);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( tmp_16_fu_520_p1 );

    SC_METHOD(thread_o_d_fu_372_p2);
    sensitive << ( i_d_reg_202 );

    SC_METHOD(thread_o_x_1_fu_446_p2);
    sensitive << ( o_x_reg_236 );

    SC_METHOD(thread_o_x_cast_fu_437_p1);
    sensitive << ( o_x_reg_236 );

    SC_METHOD(thread_o_y_1_fu_412_p2);
    sensitive << ( o_y_reg_213 );

    SC_METHOD(thread_o_y_cast_fu_403_p1);
    sensitive << ( o_y_reg_213 );

    SC_METHOD(thread_output_element_fu_585_p3);
    sensitive << ( temp_reg_805 );
    sensitive << ( tmp_23_reg_837 );
    sensitive << ( tmp_12_reg_283 );

    SC_METHOD(thread_temp_to_int_fu_507_p1);
    sensitive << ( temp_reg_805 );

    SC_METHOD(thread_tmp10_fu_467_p2);
    sensitive << ( tmp_4_reg_656 );
    sensitive << ( o_x_cast_reg_740 );

    SC_METHOD(thread_tmp2_fu_480_p2);
    sensitive << ( tmp_3_reg_651 );
    sensitive << ( i_x1_reg_295 );

    SC_METHOD(thread_tmp3_fu_462_p2);
    sensitive << ( tmp5_reg_697 );
    sensitive << ( i_y1_reg_272 );

    SC_METHOD(thread_tmp4_fu_378_p2);
    sensitive << ( phi_mul3_reg_178 );
    sensitive << ( i_d_cast_fu_363_p1 );

    SC_METHOD(thread_tmp8_fu_418_p2);
    sensitive << ( tmp7_reg_702 );
    sensitive << ( o_y_cast_fu_403_p1 );

    SC_METHOD(thread_tmp9_fu_384_p2);
    sensitive << ( phi_mul5_reg_190 );
    sensitive << ( i_d_cast_fu_363_p1 );

    SC_METHOD(thread_tmp_10_fu_457_p2);
    sensitive << ( tmp_s_reg_725 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( i_y1_reg_272 );

    SC_METHOD(thread_tmp_11_fu_591_p2);
    sensitive << ( tmp1_reg_730 );
    sensitive << ( tmp10_reg_766 );

    SC_METHOD(thread_tmp_13_fu_475_p2);
    sensitive << ( tmp_7_reg_753 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( i_x1_reg_295 );

    SC_METHOD(thread_tmp_13_to_int_fu_524_p1);
    sensitive << ( tmp_12_reg_283 );

    SC_METHOD(thread_tmp_14_fu_497_p2);
    sensitive << ( tmp6_reg_771 );
    sensitive << ( tmp2_reg_779 );

    SC_METHOD(thread_tmp_15_fu_510_p4);
    sensitive << ( temp_to_int_fu_507_p1 );

    SC_METHOD(thread_tmp_16_fu_520_p1);
    sensitive << ( temp_to_int_fu_507_p1 );

    SC_METHOD(thread_tmp_17_fu_528_p4);
    sensitive << ( tmp_13_to_int_fu_524_p1 );

    SC_METHOD(thread_tmp_18_fu_538_p1);
    sensitive << ( tmp_13_to_int_fu_524_p1 );

    SC_METHOD(thread_tmp_19_fu_566_p2);
    sensitive << ( notlhs_reg_812 );
    sensitive << ( notrhs_reg_817 );

    SC_METHOD(thread_tmp_1_fu_324_p4);
    sensitive << ( output_offset );

    SC_METHOD(thread_tmp_20_fu_570_p2);
    sensitive << ( notlhs1_reg_822 );
    sensitive << ( notrhs1_reg_827 );

    SC_METHOD(thread_tmp_21_fu_574_p2);
    sensitive << ( tmp_19_fu_566_p2 );
    sensitive << ( tmp_20_fu_570_p2 );

    SC_METHOD(thread_tmp_23_fu_580_p2);
    sensitive << ( tmp_22_reg_832 );
    sensitive << ( tmp_21_fu_574_p2 );

    SC_METHOD(thread_tmp_2_fu_352_p2);
    sensitive << ( b_read_reg_646 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( b_cast_fu_348_p1 );

    SC_METHOD(thread_tmp_3_fu_320_p1);
    sensitive << ( tmp_fu_310_p4 );

    SC_METHOD(thread_tmp_4_fu_334_p1);
    sensitive << ( tmp_1_fu_324_p4 );

    SC_METHOD(thread_tmp_5_fu_367_p2);
    sensitive << ( od_read_reg_640 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_d_cast_fu_363_p1 );

    SC_METHOD(thread_tmp_6_fu_441_p2);
    sensitive << ( ox_read_reg_634 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( o_x_cast_fu_437_p1 );

    SC_METHOD(thread_tmp_7_fu_452_p2);
    sensitive << ( k_read_reg_601 );
    sensitive << ( i_x_reg_247 );

    SC_METHOD(thread_tmp_9_fu_407_p2);
    sensitive << ( oy_read_reg_628 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( o_y_cast_fu_403_p1 );

    SC_METHOD(thread_tmp_fu_310_p4);
    sensitive << ( input_offset );

    SC_METHOD(thread_tmp_s_fu_427_p2);
    sensitive << ( k_read_reg_601 );
    sensitive << ( i_y_reg_224 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( mem_RVALID );
    sensitive << ( mem_BVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_5_fu_367_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_9_fu_407_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_6_fu_441_p2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( tmp_10_fu_457_p2 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_13_fu_475_p2 );
    sensitive << ( ap_sig_ioackin_mem_ARREADY );
    sensitive << ( ap_sig_ioackin_mem_AWREADY );
    sensitive << ( tmp_2_fu_352_p2 );
    sensitive << ( ap_sig_ioackin_mem_WREADY );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const8);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000001";
    ap_reg_ioackin_mem_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_mem_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_mem_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "maxpool_layer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_mem_AWVALID, "(port)m_axi_mem_AWVALID");
    sc_trace(mVcdFile, m_axi_mem_AWREADY, "(port)m_axi_mem_AWREADY");
    sc_trace(mVcdFile, m_axi_mem_AWADDR, "(port)m_axi_mem_AWADDR");
    sc_trace(mVcdFile, m_axi_mem_AWID, "(port)m_axi_mem_AWID");
    sc_trace(mVcdFile, m_axi_mem_AWLEN, "(port)m_axi_mem_AWLEN");
    sc_trace(mVcdFile, m_axi_mem_AWSIZE, "(port)m_axi_mem_AWSIZE");
    sc_trace(mVcdFile, m_axi_mem_AWBURST, "(port)m_axi_mem_AWBURST");
    sc_trace(mVcdFile, m_axi_mem_AWLOCK, "(port)m_axi_mem_AWLOCK");
    sc_trace(mVcdFile, m_axi_mem_AWCACHE, "(port)m_axi_mem_AWCACHE");
    sc_trace(mVcdFile, m_axi_mem_AWPROT, "(port)m_axi_mem_AWPROT");
    sc_trace(mVcdFile, m_axi_mem_AWQOS, "(port)m_axi_mem_AWQOS");
    sc_trace(mVcdFile, m_axi_mem_AWREGION, "(port)m_axi_mem_AWREGION");
    sc_trace(mVcdFile, m_axi_mem_AWUSER, "(port)m_axi_mem_AWUSER");
    sc_trace(mVcdFile, m_axi_mem_WVALID, "(port)m_axi_mem_WVALID");
    sc_trace(mVcdFile, m_axi_mem_WREADY, "(port)m_axi_mem_WREADY");
    sc_trace(mVcdFile, m_axi_mem_WDATA, "(port)m_axi_mem_WDATA");
    sc_trace(mVcdFile, m_axi_mem_WSTRB, "(port)m_axi_mem_WSTRB");
    sc_trace(mVcdFile, m_axi_mem_WLAST, "(port)m_axi_mem_WLAST");
    sc_trace(mVcdFile, m_axi_mem_WID, "(port)m_axi_mem_WID");
    sc_trace(mVcdFile, m_axi_mem_WUSER, "(port)m_axi_mem_WUSER");
    sc_trace(mVcdFile, m_axi_mem_ARVALID, "(port)m_axi_mem_ARVALID");
    sc_trace(mVcdFile, m_axi_mem_ARREADY, "(port)m_axi_mem_ARREADY");
    sc_trace(mVcdFile, m_axi_mem_ARADDR, "(port)m_axi_mem_ARADDR");
    sc_trace(mVcdFile, m_axi_mem_ARID, "(port)m_axi_mem_ARID");
    sc_trace(mVcdFile, m_axi_mem_ARLEN, "(port)m_axi_mem_ARLEN");
    sc_trace(mVcdFile, m_axi_mem_ARSIZE, "(port)m_axi_mem_ARSIZE");
    sc_trace(mVcdFile, m_axi_mem_ARBURST, "(port)m_axi_mem_ARBURST");
    sc_trace(mVcdFile, m_axi_mem_ARLOCK, "(port)m_axi_mem_ARLOCK");
    sc_trace(mVcdFile, m_axi_mem_ARCACHE, "(port)m_axi_mem_ARCACHE");
    sc_trace(mVcdFile, m_axi_mem_ARPROT, "(port)m_axi_mem_ARPROT");
    sc_trace(mVcdFile, m_axi_mem_ARQOS, "(port)m_axi_mem_ARQOS");
    sc_trace(mVcdFile, m_axi_mem_ARREGION, "(port)m_axi_mem_ARREGION");
    sc_trace(mVcdFile, m_axi_mem_ARUSER, "(port)m_axi_mem_ARUSER");
    sc_trace(mVcdFile, m_axi_mem_RVALID, "(port)m_axi_mem_RVALID");
    sc_trace(mVcdFile, m_axi_mem_RREADY, "(port)m_axi_mem_RREADY");
    sc_trace(mVcdFile, m_axi_mem_RDATA, "(port)m_axi_mem_RDATA");
    sc_trace(mVcdFile, m_axi_mem_RLAST, "(port)m_axi_mem_RLAST");
    sc_trace(mVcdFile, m_axi_mem_RID, "(port)m_axi_mem_RID");
    sc_trace(mVcdFile, m_axi_mem_RUSER, "(port)m_axi_mem_RUSER");
    sc_trace(mVcdFile, m_axi_mem_RRESP, "(port)m_axi_mem_RRESP");
    sc_trace(mVcdFile, m_axi_mem_BVALID, "(port)m_axi_mem_BVALID");
    sc_trace(mVcdFile, m_axi_mem_BREADY, "(port)m_axi_mem_BREADY");
    sc_trace(mVcdFile, m_axi_mem_BRESP, "(port)m_axi_mem_BRESP");
    sc_trace(mVcdFile, m_axi_mem_BID, "(port)m_axi_mem_BID");
    sc_trace(mVcdFile, m_axi_mem_BUSER, "(port)m_axi_mem_BUSER");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWVALID, "(port)s_axi_CTRL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWREADY, "(port)s_axi_CTRL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWADDR, "(port)s_axi_CTRL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WVALID, "(port)s_axi_CTRL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WREADY, "(port)s_axi_CTRL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WDATA, "(port)s_axi_CTRL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WSTRB, "(port)s_axi_CTRL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARVALID, "(port)s_axi_CTRL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARREADY, "(port)s_axi_CTRL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARADDR, "(port)s_axi_CTRL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RVALID, "(port)s_axi_CTRL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RREADY, "(port)s_axi_CTRL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RDATA, "(port)s_axi_CTRL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RRESP, "(port)s_axi_CTRL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BVALID, "(port)s_axi_CTRL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BREADY, "(port)s_axi_CTRL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BRESP, "(port)s_axi_CTRL_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, input_offset, "input_offset");
    sc_trace(mVcdFile, output_offset, "output_offset");
    sc_trace(mVcdFile, b, "b");
    sc_trace(mVcdFile, od, "od");
    sc_trace(mVcdFile, ox, "ox");
    sc_trace(mVcdFile, oy, "oy");
    sc_trace(mVcdFile, id, "id");
    sc_trace(mVcdFile, ix, "ix");
    sc_trace(mVcdFile, iy, "iy");
    sc_trace(mVcdFile, s, "s");
    sc_trace(mVcdFile, k, "k");
    sc_trace(mVcdFile, mem_blk_n_AR, "mem_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, mem_blk_n_R, "mem_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, mem_blk_n_AW, "mem_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, mem_blk_n_W, "mem_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, mem_blk_n_B, "mem_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, mem_AWVALID, "mem_AWVALID");
    sc_trace(mVcdFile, mem_AWREADY, "mem_AWREADY");
    sc_trace(mVcdFile, mem_WVALID, "mem_WVALID");
    sc_trace(mVcdFile, mem_WREADY, "mem_WREADY");
    sc_trace(mVcdFile, mem_ARVALID, "mem_ARVALID");
    sc_trace(mVcdFile, mem_ARREADY, "mem_ARREADY");
    sc_trace(mVcdFile, mem_RVALID, "mem_RVALID");
    sc_trace(mVcdFile, mem_RREADY, "mem_RREADY");
    sc_trace(mVcdFile, mem_RDATA, "mem_RDATA");
    sc_trace(mVcdFile, mem_RLAST, "mem_RLAST");
    sc_trace(mVcdFile, mem_RID, "mem_RID");
    sc_trace(mVcdFile, mem_RUSER, "mem_RUSER");
    sc_trace(mVcdFile, mem_RRESP, "mem_RRESP");
    sc_trace(mVcdFile, mem_BVALID, "mem_BVALID");
    sc_trace(mVcdFile, mem_BREADY, "mem_BREADY");
    sc_trace(mVcdFile, mem_BRESP, "mem_BRESP");
    sc_trace(mVcdFile, mem_BID, "mem_BID");
    sc_trace(mVcdFile, mem_BUSER, "mem_BUSER");
    sc_trace(mVcdFile, k_read_reg_601, "k_read_reg_601");
    sc_trace(mVcdFile, s_read_reg_607, "s_read_reg_607");
    sc_trace(mVcdFile, iy_read_reg_613, "iy_read_reg_613");
    sc_trace(mVcdFile, ix_read_reg_618, "ix_read_reg_618");
    sc_trace(mVcdFile, id_read_reg_623, "id_read_reg_623");
    sc_trace(mVcdFile, oy_read_reg_628, "oy_read_reg_628");
    sc_trace(mVcdFile, ox_read_reg_634, "ox_read_reg_634");
    sc_trace(mVcdFile, od_read_reg_640, "od_read_reg_640");
    sc_trace(mVcdFile, b_read_reg_646, "b_read_reg_646");
    sc_trace(mVcdFile, tmp_3_fu_320_p1, "tmp_3_fu_320_p1");
    sc_trace(mVcdFile, tmp_3_reg_651, "tmp_3_reg_651");
    sc_trace(mVcdFile, tmp_4_fu_334_p1, "tmp_4_fu_334_p1");
    sc_trace(mVcdFile, tmp_4_reg_656, "tmp_4_reg_656");
    sc_trace(mVcdFile, next_mul6_fu_338_p2, "next_mul6_fu_338_p2");
    sc_trace(mVcdFile, next_mul6_reg_661, "next_mul6_reg_661");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, next_mul4_fu_343_p2, "next_mul4_fu_343_p2");
    sc_trace(mVcdFile, next_mul4_reg_666, "next_mul4_reg_666");
    sc_trace(mVcdFile, b_1_fu_357_p2, "b_1_fu_357_p2");
    sc_trace(mVcdFile, b_1_reg_674, "b_1_reg_674");
    sc_trace(mVcdFile, o_d_fu_372_p2, "o_d_fu_372_p2");
    sc_trace(mVcdFile, o_d_reg_682, "o_d_reg_682");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp4_fu_378_p2, "tmp4_fu_378_p2");
    sc_trace(mVcdFile, tmp4_reg_687, "tmp4_reg_687");
    sc_trace(mVcdFile, tmp_5_fu_367_p2, "tmp_5_fu_367_p2");
    sc_trace(mVcdFile, tmp9_fu_384_p2, "tmp9_fu_384_p2");
    sc_trace(mVcdFile, tmp9_reg_692, "tmp9_reg_692");
    sc_trace(mVcdFile, grp_fu_390_p2, "grp_fu_390_p2");
    sc_trace(mVcdFile, tmp5_reg_697, "tmp5_reg_697");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_394_p2, "grp_fu_394_p2");
    sc_trace(mVcdFile, tmp7_reg_702, "tmp7_reg_702");
    sc_trace(mVcdFile, next_mul2_fu_398_p2, "next_mul2_fu_398_p2");
    sc_trace(mVcdFile, next_mul2_reg_707, "next_mul2_reg_707");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, o_y_1_fu_412_p2, "o_y_1_fu_412_p2");
    sc_trace(mVcdFile, o_y_1_reg_715, "o_y_1_reg_715");
    sc_trace(mVcdFile, tmp8_fu_418_p2, "tmp8_fu_418_p2");
    sc_trace(mVcdFile, tmp8_reg_720, "tmp8_reg_720");
    sc_trace(mVcdFile, tmp_9_fu_407_p2, "tmp_9_fu_407_p2");
    sc_trace(mVcdFile, tmp_s_fu_427_p2, "tmp_s_fu_427_p2");
    sc_trace(mVcdFile, tmp_s_reg_725, "tmp_s_reg_725");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_fu_423_p2, "grp_fu_423_p2");
    sc_trace(mVcdFile, tmp1_reg_730, "tmp1_reg_730");
    sc_trace(mVcdFile, next_mul_fu_432_p2, "next_mul_fu_432_p2");
    sc_trace(mVcdFile, next_mul_reg_735, "next_mul_reg_735");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, o_x_cast_fu_437_p1, "o_x_cast_fu_437_p1");
    sc_trace(mVcdFile, o_x_cast_reg_740, "o_x_cast_reg_740");
    sc_trace(mVcdFile, o_x_1_fu_446_p2, "o_x_1_fu_446_p2");
    sc_trace(mVcdFile, o_x_1_reg_748, "o_x_1_reg_748");
    sc_trace(mVcdFile, tmp_7_fu_452_p2, "tmp_7_fu_452_p2");
    sc_trace(mVcdFile, tmp_7_reg_753, "tmp_7_reg_753");
    sc_trace(mVcdFile, tmp_6_fu_441_p2, "tmp_6_fu_441_p2");
    sc_trace(mVcdFile, tmp3_fu_462_p2, "tmp3_fu_462_p2");
    sc_trace(mVcdFile, tmp3_reg_761, "tmp3_reg_761");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, tmp_10_fu_457_p2, "tmp_10_fu_457_p2");
    sc_trace(mVcdFile, tmp10_fu_467_p2, "tmp10_fu_467_p2");
    sc_trace(mVcdFile, tmp10_reg_766, "tmp10_reg_766");
    sc_trace(mVcdFile, grp_fu_471_p2, "grp_fu_471_p2");
    sc_trace(mVcdFile, tmp6_reg_771, "tmp6_reg_771");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, tmp2_fu_480_p2, "tmp2_fu_480_p2");
    sc_trace(mVcdFile, tmp2_reg_779, "tmp2_reg_779");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, tmp_13_fu_475_p2, "tmp_13_fu_475_p2");
    sc_trace(mVcdFile, i_x_1_fu_485_p2, "i_x_1_fu_485_p2");
    sc_trace(mVcdFile, i_x_1_reg_784, "i_x_1_reg_784");
    sc_trace(mVcdFile, i_y_1_fu_491_p2, "i_y_1_fu_491_p2");
    sc_trace(mVcdFile, tmp_14_fu_497_p2, "tmp_14_fu_497_p2");
    sc_trace(mVcdFile, tmp_14_reg_794, "tmp_14_reg_794");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_sig_ioackin_mem_ARREADY, "ap_sig_ioackin_mem_ARREADY");
    sc_trace(mVcdFile, temp_reg_805, "temp_reg_805");
    sc_trace(mVcdFile, notlhs_fu_542_p2, "notlhs_fu_542_p2");
    sc_trace(mVcdFile, notlhs_reg_812, "notlhs_reg_812");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, notrhs_fu_548_p2, "notrhs_fu_548_p2");
    sc_trace(mVcdFile, notrhs_reg_817, "notrhs_reg_817");
    sc_trace(mVcdFile, notlhs1_fu_554_p2, "notlhs1_fu_554_p2");
    sc_trace(mVcdFile, notlhs1_reg_822, "notlhs1_reg_822");
    sc_trace(mVcdFile, notrhs1_fu_560_p2, "notrhs1_fu_560_p2");
    sc_trace(mVcdFile, notrhs1_reg_827, "notrhs1_reg_827");
    sc_trace(mVcdFile, grp_fu_305_p2, "grp_fu_305_p2");
    sc_trace(mVcdFile, tmp_22_reg_832, "tmp_22_reg_832");
    sc_trace(mVcdFile, tmp_23_fu_580_p2, "tmp_23_fu_580_p2");
    sc_trace(mVcdFile, tmp_23_reg_837, "tmp_23_reg_837");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, output_element_fu_585_p3, "output_element_fu_585_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, tmp_11_fu_591_p2, "tmp_11_fu_591_p2");
    sc_trace(mVcdFile, tmp_11_reg_847, "tmp_11_reg_847");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_sig_ioackin_mem_AWREADY, "ap_sig_ioackin_mem_AWREADY");
    sc_trace(mVcdFile, b_s_reg_167, "b_s_reg_167");
    sc_trace(mVcdFile, phi_mul3_reg_178, "phi_mul3_reg_178");
    sc_trace(mVcdFile, phi_mul5_reg_190, "phi_mul5_reg_190");
    sc_trace(mVcdFile, i_d_reg_202, "i_d_reg_202");
    sc_trace(mVcdFile, tmp_2_fu_352_p2, "tmp_2_fu_352_p2");
    sc_trace(mVcdFile, o_y_reg_213, "o_y_reg_213");
    sc_trace(mVcdFile, i_y_reg_224, "i_y_reg_224");
    sc_trace(mVcdFile, o_x_reg_236, "o_x_reg_236");
    sc_trace(mVcdFile, i_x_reg_247, "i_x_reg_247");
    sc_trace(mVcdFile, tmp_8_reg_259, "tmp_8_reg_259");
    sc_trace(mVcdFile, i_y1_reg_272, "i_y1_reg_272");
    sc_trace(mVcdFile, tmp_12_reg_283, "tmp_12_reg_283");
    sc_trace(mVcdFile, i_x1_reg_295, "i_x1_reg_295");
    sc_trace(mVcdFile, ap_reg_ioackin_mem_ARREADY, "ap_reg_ioackin_mem_ARREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_mem_AWREADY, "ap_reg_ioackin_mem_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_mem_WREADY, "ap_reg_ioackin_mem_WREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_mem_WREADY, "ap_sig_ioackin_mem_WREADY");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, tmp_fu_310_p4, "tmp_fu_310_p4");
    sc_trace(mVcdFile, tmp_1_fu_324_p4, "tmp_1_fu_324_p4");
    sc_trace(mVcdFile, b_cast_fu_348_p1, "b_cast_fu_348_p1");
    sc_trace(mVcdFile, i_d_cast_fu_363_p1, "i_d_cast_fu_363_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, o_y_cast_fu_403_p1, "o_y_cast_fu_403_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, temp_to_int_fu_507_p1, "temp_to_int_fu_507_p1");
    sc_trace(mVcdFile, tmp_13_to_int_fu_524_p1, "tmp_13_to_int_fu_524_p1");
    sc_trace(mVcdFile, tmp_15_fu_510_p4, "tmp_15_fu_510_p4");
    sc_trace(mVcdFile, tmp_16_fu_520_p1, "tmp_16_fu_520_p1");
    sc_trace(mVcdFile, tmp_17_fu_528_p4, "tmp_17_fu_528_p4");
    sc_trace(mVcdFile, tmp_18_fu_538_p1, "tmp_18_fu_538_p1");
    sc_trace(mVcdFile, tmp_19_fu_566_p2, "tmp_19_fu_566_p2");
    sc_trace(mVcdFile, tmp_20_fu_570_p2, "tmp_20_fu_570_p2");
    sc_trace(mVcdFile, tmp_21_fu_574_p2, "tmp_21_fu_574_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("maxpool_layer.hdltvin.dat");
    mHdltvoutHandle.open("maxpool_layer.hdltvout.dat");
}

maxpool_layer::~maxpool_layer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete maxpool_layer_CTRL_BUS_s_axi_U;
    delete maxpool_layer_mem_m_axi_U;
    delete maxpool_layer_fcmbkb_U0;
    delete maxpool_layer_mulcud_U1;
    delete maxpool_layer_mulcud_U2;
    delete maxpool_layer_mulcud_U3;
    delete maxpool_layer_mulcud_U4;
}

void maxpool_layer::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void maxpool_layer::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void maxpool_layer::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_1;
}

void maxpool_layer::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void maxpool_layer::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void maxpool_layer::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void maxpool_layer::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void maxpool_layer::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv4_F;
}

void maxpool_layer::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv5_4;
}

void maxpool_layer::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_mem_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_mem_ARREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_mem_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, mem_ARREADY.read())) {
                ap_reg_ioackin_mem_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_mem_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_mem_AWREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_mem_AWREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, mem_AWREADY.read())) {
                ap_reg_ioackin_mem_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_mem_WREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_mem_WREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_mem_WREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, mem_WREADY.read())) {
                ap_reg_ioackin_mem_WREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_5_fu_367_p2.read(), ap_const_lv1_0))) {
        b_s_reg_167 = b_1_reg_674.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        b_s_reg_167 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_352_p2.read()))) {
        i_d_reg_202 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(tmp_9_fu_407_p2.read(), ap_const_lv1_0))) {
        i_d_reg_202 = o_d_reg_682.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        i_x1_reg_295 = i_x_1_reg_784.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        i_x1_reg_295 = i_x_reg_247.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        i_x_reg_247 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
                esl_seteq<1,1,1>(mem_BVALID.read(), ap_const_logic_1))) {
        i_x_reg_247 = next_mul_reg_735.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_475_p2.read()))) {
        i_y1_reg_272 = i_y_1_fu_491_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_6_fu_441_p2.read()))) {
        i_y1_reg_272 = i_y_reg_224.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(tmp_6_fu_441_p2.read(), ap_const_lv1_0))) {
        i_y_reg_224 = next_mul2_reg_707.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_y_reg_224 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        o_x_reg_236 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
                esl_seteq<1,1,1>(mem_BVALID.read(), ap_const_logic_1))) {
        o_x_reg_236 = o_x_1_reg_748.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(tmp_6_fu_441_p2.read(), ap_const_lv1_0))) {
        o_y_reg_213 = o_y_1_reg_715.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        o_y_reg_213 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_5_fu_367_p2.read(), ap_const_lv1_0))) {
        phi_mul3_reg_178 = next_mul4_reg_666.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul3_reg_178 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_5_fu_367_p2.read(), ap_const_lv1_0))) {
        phi_mul5_reg_190 = next_mul6_reg_661.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul5_reg_190 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        tmp_12_reg_283 = output_element_fu_585_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        tmp_12_reg_283 = tmp_8_reg_259.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_475_p2.read()))) {
        tmp_8_reg_259 = tmp_12_reg_283.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_6_fu_441_p2.read()))) {
        tmp_8_reg_259 = ap_const_lv32_C60CA000;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        b_1_reg_674 = b_1_fu_357_p2.read();
        next_mul4_reg_666 = next_mul4_fu_343_p2.read();
        next_mul6_reg_661 = next_mul6_fu_338_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        b_read_reg_646 = b.read();
        id_read_reg_623 = id.read();
        ix_read_reg_618 = ix.read();
        iy_read_reg_613 = iy.read();
        k_read_reg_601 = k.read();
        od_read_reg_640 = od.read();
        ox_read_reg_634 = ox.read();
        oy_read_reg_628 = oy.read();
        s_read_reg_607 = s.read();
        tmp_3_reg_651 = tmp_3_fu_320_p1.read();
        tmp_4_reg_656 = tmp_4_fu_334_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_fu_475_p2.read()))) {
        i_x_1_reg_784 = i_x_1_fu_485_p2.read();
        tmp2_reg_779 = tmp2_fu_480_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        next_mul2_reg_707 = next_mul2_fu_398_p2.read();
        o_y_1_reg_715 = o_y_1_fu_412_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        next_mul_reg_735 = next_mul_fu_432_p2.read();
        o_x_1_reg_748 = o_x_1_fu_446_p2.read();
        o_x_cast_reg_740 = o_x_cast_fu_437_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        notlhs1_reg_822 = notlhs1_fu_554_p2.read();
        notlhs_reg_812 = notlhs_fu_542_p2.read();
        notrhs1_reg_827 = notrhs1_fu_560_p2.read();
        notrhs_reg_817 = notrhs_fu_548_p2.read();
        tmp_22_reg_832 = grp_fu_305_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        o_d_reg_682 = o_d_fu_372_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(mem_RVALID.read(), ap_const_logic_1))) {
        temp_reg_805 = mem_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(tmp_10_fu_457_p2.read(), ap_const_lv1_0))) {
        tmp10_reg_766 = tmp10_fu_467_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        tmp1_reg_730 = grp_fu_423_p2.read();
        tmp_s_reg_725 = tmp_s_fu_427_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_fu_457_p2.read()))) {
        tmp3_reg_761 = tmp3_fu_462_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_5_fu_367_p2.read(), ap_const_lv1_1))) {
        tmp4_reg_687 = tmp4_fu_378_p2.read();
        tmp9_reg_692 = tmp9_fu_384_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp5_reg_697 = grp_fu_390_p2.read();
        tmp7_reg_702 = grp_fu_394_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        tmp6_reg_771 = grp_fu_471_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_407_p2.read()))) {
        tmp8_reg_720 = tmp8_fu_418_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        tmp_11_reg_847 = tmp_11_fu_591_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        tmp_14_reg_794 = tmp_14_fu_497_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        tmp_23_reg_837 = tmp_23_fu_580_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_6_fu_441_p2.read()))) {
        tmp_7_reg_753 = tmp_7_fu_452_p2.read();
    }
}

void maxpool_layer::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void maxpool_layer::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void maxpool_layer::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void maxpool_layer::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void maxpool_layer::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void maxpool_layer::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void maxpool_layer::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void maxpool_layer::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void maxpool_layer::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void maxpool_layer::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void maxpool_layer::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void maxpool_layer::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void maxpool_layer::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void maxpool_layer::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void maxpool_layer::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void maxpool_layer::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void maxpool_layer::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void maxpool_layer::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void maxpool_layer::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void maxpool_layer::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void maxpool_layer::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void maxpool_layer::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void maxpool_layer::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void maxpool_layer::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void maxpool_layer::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_352_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void maxpool_layer::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void maxpool_layer::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_352_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void maxpool_layer::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void maxpool_layer::thread_ap_sig_ioackin_mem_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_mem_ARREADY.read())) {
        ap_sig_ioackin_mem_ARREADY = mem_ARREADY.read();
    } else {
        ap_sig_ioackin_mem_ARREADY = ap_const_logic_1;
    }
}

void maxpool_layer::thread_ap_sig_ioackin_mem_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_mem_AWREADY.read())) {
        ap_sig_ioackin_mem_AWREADY = mem_AWREADY.read();
    } else {
        ap_sig_ioackin_mem_AWREADY = ap_const_logic_1;
    }
}

void maxpool_layer::thread_ap_sig_ioackin_mem_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_mem_WREADY.read())) {
        ap_sig_ioackin_mem_WREADY = mem_WREADY.read();
    } else {
        ap_sig_ioackin_mem_WREADY = ap_const_logic_1;
    }
}

void maxpool_layer::thread_b_1_fu_357_p2() {
    b_1_fu_357_p2 = (!b_s_reg_167.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(b_s_reg_167.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void maxpool_layer::thread_b_cast_fu_348_p1() {
    b_cast_fu_348_p1 = esl_zext<32,31>(b_s_reg_167.read());
}

void maxpool_layer::thread_i_d_cast_fu_363_p1() {
    i_d_cast_fu_363_p1 = esl_zext<32,31>(i_d_reg_202.read());
}

void maxpool_layer::thread_i_x_1_fu_485_p2() {
    i_x_1_fu_485_p2 = (!ap_const_lv32_1.is_01() || !i_x1_reg_295.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(i_x1_reg_295.read()));
}

void maxpool_layer::thread_i_y_1_fu_491_p2() {
    i_y_1_fu_491_p2 = (!i_y1_reg_272.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_y1_reg_272.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void maxpool_layer::thread_mem_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_mem_ARREADY.read()))) {
        mem_ARVALID = ap_const_logic_1;
    } else {
        mem_ARVALID = ap_const_logic_0;
    }
}

void maxpool_layer::thread_mem_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_mem_AWREADY.read()))) {
        mem_AWVALID = ap_const_logic_1;
    } else {
        mem_AWVALID = ap_const_logic_0;
    }
}

void maxpool_layer::thread_mem_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
         esl_seteq<1,1,1>(mem_BVALID.read(), ap_const_logic_1))) {
        mem_BREADY = ap_const_logic_1;
    } else {
        mem_BREADY = ap_const_logic_0;
    }
}

void maxpool_layer::thread_mem_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
         esl_seteq<1,1,1>(mem_RVALID.read(), ap_const_logic_1))) {
        mem_RREADY = ap_const_logic_1;
    } else {
        mem_RREADY = ap_const_logic_0;
    }
}

void maxpool_layer::thread_mem_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_mem_WREADY.read()))) {
        mem_WVALID = ap_const_logic_1;
    } else {
        mem_WVALID = ap_const_logic_0;
    }
}

void maxpool_layer::thread_mem_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        mem_blk_n_AR = m_axi_mem_ARREADY.read();
    } else {
        mem_blk_n_AR = ap_const_logic_1;
    }
}

void maxpool_layer::thread_mem_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        mem_blk_n_AW = m_axi_mem_AWREADY.read();
    } else {
        mem_blk_n_AW = ap_const_logic_1;
    }
}

void maxpool_layer::thread_mem_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        mem_blk_n_B = m_axi_mem_BVALID.read();
    } else {
        mem_blk_n_B = ap_const_logic_1;
    }
}

void maxpool_layer::thread_mem_blk_n_R() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        mem_blk_n_R = m_axi_mem_RVALID.read();
    } else {
        mem_blk_n_R = ap_const_logic_1;
    }
}

void maxpool_layer::thread_mem_blk_n_W() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        mem_blk_n_W = m_axi_mem_WREADY.read();
    } else {
        mem_blk_n_W = ap_const_logic_1;
    }
}

void maxpool_layer::thread_next_mul2_fu_398_p2() {
    next_mul2_fu_398_p2 = (!i_y_reg_224.read().is_01() || !s_read_reg_607.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_y_reg_224.read()) + sc_biguint<32>(s_read_reg_607.read()));
}

void maxpool_layer::thread_next_mul4_fu_343_p2() {
    next_mul4_fu_343_p2 = (!phi_mul3_reg_178.read().is_01() || !id_read_reg_623.read().is_01())? sc_lv<32>(): (sc_biguint<32>(phi_mul3_reg_178.read()) + sc_biguint<32>(id_read_reg_623.read()));
}

void maxpool_layer::thread_next_mul6_fu_338_p2() {
    next_mul6_fu_338_p2 = (!phi_mul5_reg_190.read().is_01() || !od_read_reg_640.read().is_01())? sc_lv<32>(): (sc_biguint<32>(phi_mul5_reg_190.read()) + sc_biguint<32>(od_read_reg_640.read()));
}

void maxpool_layer::thread_next_mul_fu_432_p2() {
    next_mul_fu_432_p2 = (!i_x_reg_247.read().is_01() || !s_read_reg_607.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_x_reg_247.read()) + sc_biguint<32>(s_read_reg_607.read()));
}

void maxpool_layer::thread_notlhs1_fu_554_p2() {
    notlhs1_fu_554_p2 = (!tmp_17_fu_528_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_17_fu_528_p4.read() != ap_const_lv8_FF);
}

void maxpool_layer::thread_notlhs_fu_542_p2() {
    notlhs_fu_542_p2 = (!tmp_15_fu_510_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_15_fu_510_p4.read() != ap_const_lv8_FF);
}

void maxpool_layer::thread_notrhs1_fu_560_p2() {
    notrhs1_fu_560_p2 = (!tmp_18_fu_538_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_18_fu_538_p1.read() == ap_const_lv23_0);
}

void maxpool_layer::thread_notrhs_fu_548_p2() {
    notrhs_fu_548_p2 = (!tmp_16_fu_520_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_16_fu_520_p1.read() == ap_const_lv23_0);
}

void maxpool_layer::thread_o_d_fu_372_p2() {
    o_d_fu_372_p2 = (!i_d_reg_202.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_d_reg_202.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void maxpool_layer::thread_o_x_1_fu_446_p2() {
    o_x_1_fu_446_p2 = (!o_x_reg_236.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(o_x_reg_236.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void maxpool_layer::thread_o_x_cast_fu_437_p1() {
    o_x_cast_fu_437_p1 = esl_zext<32,31>(o_x_reg_236.read());
}

void maxpool_layer::thread_o_y_1_fu_412_p2() {
    o_y_1_fu_412_p2 = (!o_y_reg_213.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(o_y_reg_213.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void maxpool_layer::thread_o_y_cast_fu_403_p1() {
    o_y_cast_fu_403_p1 = esl_zext<32,31>(o_y_reg_213.read());
}

void maxpool_layer::thread_output_element_fu_585_p3() {
    output_element_fu_585_p3 = (!tmp_23_reg_837.read()[0].is_01())? sc_lv<32>(): ((tmp_23_reg_837.read()[0].to_bool())? tmp_12_reg_283.read(): temp_reg_805.read());
}

void maxpool_layer::thread_temp_to_int_fu_507_p1() {
    temp_to_int_fu_507_p1 = temp_reg_805.read();
}

void maxpool_layer::thread_tmp10_fu_467_p2() {
    tmp10_fu_467_p2 = (!tmp_4_reg_656.read().is_01() || !o_x_cast_reg_740.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_4_reg_656.read()) + sc_biguint<32>(o_x_cast_reg_740.read()));
}

void maxpool_layer::thread_tmp2_fu_480_p2() {
    tmp2_fu_480_p2 = (!tmp_3_reg_651.read().is_01() || !i_x1_reg_295.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_3_reg_651.read()) + sc_biguint<32>(i_x1_reg_295.read()));
}

void maxpool_layer::thread_tmp3_fu_462_p2() {
    tmp3_fu_462_p2 = (!i_y1_reg_272.read().is_01() || !tmp5_reg_697.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_y1_reg_272.read()) + sc_biguint<32>(tmp5_reg_697.read()));
}

void maxpool_layer::thread_tmp4_fu_378_p2() {
    tmp4_fu_378_p2 = (!i_d_cast_fu_363_p1.read().is_01() || !phi_mul3_reg_178.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_d_cast_fu_363_p1.read()) + sc_biguint<32>(phi_mul3_reg_178.read()));
}

void maxpool_layer::thread_tmp8_fu_418_p2() {
    tmp8_fu_418_p2 = (!o_y_cast_fu_403_p1.read().is_01() || !tmp7_reg_702.read().is_01())? sc_lv<32>(): (sc_biguint<32>(o_y_cast_fu_403_p1.read()) + sc_biguint<32>(tmp7_reg_702.read()));
}

void maxpool_layer::thread_tmp9_fu_384_p2() {
    tmp9_fu_384_p2 = (!i_d_cast_fu_363_p1.read().is_01() || !phi_mul5_reg_190.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_d_cast_fu_363_p1.read()) + sc_biguint<32>(phi_mul5_reg_190.read()));
}

void maxpool_layer::thread_tmp_10_fu_457_p2() {
    tmp_10_fu_457_p2 = (!i_y1_reg_272.read().is_01() || !tmp_s_reg_725.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_y1_reg_272.read()) < sc_bigint<32>(tmp_s_reg_725.read()));
}

void maxpool_layer::thread_tmp_11_fu_591_p2() {
    tmp_11_fu_591_p2 = (!tmp10_reg_766.read().is_01() || !tmp1_reg_730.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp10_reg_766.read()) + sc_biguint<32>(tmp1_reg_730.read()));
}

void maxpool_layer::thread_tmp_13_fu_475_p2() {
    tmp_13_fu_475_p2 = (!i_x1_reg_295.read().is_01() || !tmp_7_reg_753.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_x1_reg_295.read()) < sc_bigint<32>(tmp_7_reg_753.read()));
}

void maxpool_layer::thread_tmp_13_to_int_fu_524_p1() {
    tmp_13_to_int_fu_524_p1 = tmp_12_reg_283.read();
}

void maxpool_layer::thread_tmp_14_fu_497_p2() {
    tmp_14_fu_497_p2 = (!tmp2_reg_779.read().is_01() || !tmp6_reg_771.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp2_reg_779.read()) + sc_biguint<32>(tmp6_reg_771.read()));
}

void maxpool_layer::thread_tmp_15_fu_510_p4() {
    tmp_15_fu_510_p4 = temp_to_int_fu_507_p1.read().range(30, 23);
}

void maxpool_layer::thread_tmp_16_fu_520_p1() {
    tmp_16_fu_520_p1 = temp_to_int_fu_507_p1.read().range(23-1, 0);
}

void maxpool_layer::thread_tmp_17_fu_528_p4() {
    tmp_17_fu_528_p4 = tmp_13_to_int_fu_524_p1.read().range(30, 23);
}

void maxpool_layer::thread_tmp_18_fu_538_p1() {
    tmp_18_fu_538_p1 = tmp_13_to_int_fu_524_p1.read().range(23-1, 0);
}

void maxpool_layer::thread_tmp_19_fu_566_p2() {
    tmp_19_fu_566_p2 = (notrhs_reg_817.read() | notlhs_reg_812.read());
}

void maxpool_layer::thread_tmp_1_fu_324_p4() {
    tmp_1_fu_324_p4 = output_offset.read().range(31, 2);
}

void maxpool_layer::thread_tmp_20_fu_570_p2() {
    tmp_20_fu_570_p2 = (notrhs1_reg_827.read() | notlhs1_reg_822.read());
}

void maxpool_layer::thread_tmp_21_fu_574_p2() {
    tmp_21_fu_574_p2 = (tmp_19_fu_566_p2.read() & tmp_20_fu_570_p2.read());
}

void maxpool_layer::thread_tmp_23_fu_580_p2() {
    tmp_23_fu_580_p2 = (tmp_21_fu_574_p2.read() & tmp_22_reg_832.read());
}

void maxpool_layer::thread_tmp_2_fu_352_p2() {
    tmp_2_fu_352_p2 = (!b_cast_fu_348_p1.read().is_01() || !b_read_reg_646.read().is_01())? sc_lv<1>(): (sc_bigint<32>(b_cast_fu_348_p1.read()) < sc_bigint<32>(b_read_reg_646.read()));
}

void maxpool_layer::thread_tmp_3_fu_320_p1() {
    tmp_3_fu_320_p1 = esl_zext<32,30>(tmp_fu_310_p4.read());
}

void maxpool_layer::thread_tmp_4_fu_334_p1() {
    tmp_4_fu_334_p1 = esl_zext<32,30>(tmp_1_fu_324_p4.read());
}

void maxpool_layer::thread_tmp_5_fu_367_p2() {
    tmp_5_fu_367_p2 = (!i_d_cast_fu_363_p1.read().is_01() || !od_read_reg_640.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_d_cast_fu_363_p1.read()) < sc_bigint<32>(od_read_reg_640.read()));
}

void maxpool_layer::thread_tmp_6_fu_441_p2() {
    tmp_6_fu_441_p2 = (!o_x_cast_fu_437_p1.read().is_01() || !ox_read_reg_634.read().is_01())? sc_lv<1>(): (sc_bigint<32>(o_x_cast_fu_437_p1.read()) < sc_bigint<32>(ox_read_reg_634.read()));
}

void maxpool_layer::thread_tmp_7_fu_452_p2() {
    tmp_7_fu_452_p2 = (!i_x_reg_247.read().is_01() || !k_read_reg_601.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_x_reg_247.read()) + sc_biguint<32>(k_read_reg_601.read()));
}

void maxpool_layer::thread_tmp_9_fu_407_p2() {
    tmp_9_fu_407_p2 = (!o_y_cast_fu_403_p1.read().is_01() || !oy_read_reg_628.read().is_01())? sc_lv<1>(): (sc_bigint<32>(o_y_cast_fu_403_p1.read()) < sc_bigint<32>(oy_read_reg_628.read()));
}

void maxpool_layer::thread_tmp_fu_310_p4() {
    tmp_fu_310_p4 = input_offset.read().range(31, 2);
}

void maxpool_layer::thread_tmp_s_fu_427_p2() {
    tmp_s_fu_427_p2 = (!i_y_reg_224.read().is_01() || !k_read_reg_601.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_y_reg_224.read()) + sc_biguint<32>(k_read_reg_601.read()));
}

void maxpool_layer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_352_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_5_fu_367_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(tmp_9_fu_407_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(tmp_6_fu_441_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(tmp_10_fu_457_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state44;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_475_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state29;
            }
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_mem_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(mem_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state38;
            } else {
                ap_NS_fsm = ap_ST_fsm_state37;
            }
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_mem_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state46;
            } else {
                ap_NS_fsm = ap_ST_fsm_state45;
            }
            break;
        case 35184372088832 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_mem_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state47;
            } else {
                ap_NS_fsm = ap_ST_fsm_state46;
            }
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state51;
            break;
        case 1125899906842624 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && esl_seteq<1,1,1>(mem_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state51;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

void maxpool_layer::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_mem_AWVALID\" :  \"" << m_axi_mem_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_AWREADY\" :  \"" << m_axi_mem_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWADDR\" :  \"" << m_axi_mem_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWID\" :  \"" << m_axi_mem_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWLEN\" :  \"" << m_axi_mem_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWSIZE\" :  \"" << m_axi_mem_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWBURST\" :  \"" << m_axi_mem_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWLOCK\" :  \"" << m_axi_mem_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWCACHE\" :  \"" << m_axi_mem_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWPROT\" :  \"" << m_axi_mem_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWQOS\" :  \"" << m_axi_mem_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWREGION\" :  \"" << m_axi_mem_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWUSER\" :  \"" << m_axi_mem_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WVALID\" :  \"" << m_axi_mem_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_WREADY\" :  \"" << m_axi_mem_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WDATA\" :  \"" << m_axi_mem_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WSTRB\" :  \"" << m_axi_mem_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WLAST\" :  \"" << m_axi_mem_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WID\" :  \"" << m_axi_mem_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WUSER\" :  \"" << m_axi_mem_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARVALID\" :  \"" << m_axi_mem_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_ARREADY\" :  \"" << m_axi_mem_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARADDR\" :  \"" << m_axi_mem_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARID\" :  \"" << m_axi_mem_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARLEN\" :  \"" << m_axi_mem_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARSIZE\" :  \"" << m_axi_mem_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARBURST\" :  \"" << m_axi_mem_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARLOCK\" :  \"" << m_axi_mem_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARCACHE\" :  \"" << m_axi_mem_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARPROT\" :  \"" << m_axi_mem_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARQOS\" :  \"" << m_axi_mem_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARREGION\" :  \"" << m_axi_mem_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARUSER\" :  \"" << m_axi_mem_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RVALID\" :  \"" << m_axi_mem_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_RREADY\" :  \"" << m_axi_mem_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RDATA\" :  \"" << m_axi_mem_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RLAST\" :  \"" << m_axi_mem_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RID\" :  \"" << m_axi_mem_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RUSER\" :  \"" << m_axi_mem_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RRESP\" :  \"" << m_axi_mem_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_BVALID\" :  \"" << m_axi_mem_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_BREADY\" :  \"" << m_axi_mem_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_BRESP\" :  \"" << m_axi_mem_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_BID\" :  \"" << m_axi_mem_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_BUSER\" :  \"" << m_axi_mem_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_AWVALID\" :  \"" << s_axi_CTRL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_AWREADY\" :  \"" << s_axi_CTRL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_AWADDR\" :  \"" << s_axi_CTRL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WVALID\" :  \"" << s_axi_CTRL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_WREADY\" :  \"" << s_axi_CTRL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WDATA\" :  \"" << s_axi_CTRL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WSTRB\" :  \"" << s_axi_CTRL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARVALID\" :  \"" << s_axi_CTRL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_ARREADY\" :  \"" << s_axi_CTRL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARADDR\" :  \"" << s_axi_CTRL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RVALID\" :  \"" << s_axi_CTRL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_RREADY\" :  \"" << s_axi_CTRL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RDATA\" :  \"" << s_axi_CTRL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RRESP\" :  \"" << s_axi_CTRL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BVALID\" :  \"" << s_axi_CTRL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_BREADY\" :  \"" << s_axi_CTRL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BRESP\" :  \"" << s_axi_CTRL_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

